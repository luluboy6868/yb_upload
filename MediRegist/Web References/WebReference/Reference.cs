//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace MediRegist.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EmrServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class EmrService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SF_TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ArcCancleUpdateStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback OutpatToInPatOperationCompleted;
        
        private System.Threading.SendOrPostCallback QYYYGETINFOOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInp_NoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnitePatientIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnitePaitentMrFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetHisCostNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetHisCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback SFGETINFOOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetPatientIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetToHisOutPatInfoBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_fileToLocalOperationCompleted;
        
        private System.Threading.SendOrPostCallback DTGETINFOOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetCpInfoDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback YYGETINFOOperationCompleted;
        
        private System.Threading.SendOrPostCallback CisGetOutPatientInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrOldOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback genMrPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMrSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetICUmessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrAccountValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroZrysOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroBedDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetNurseBloodBypatient1OperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetExamReportNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetNurseBloodBypatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetEvaluateBloodBypatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroOperationCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroICDCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroDeptDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroPatForOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeptUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroNewPatOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroOnePatOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroOnePatTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroNewPatMZOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroOutPatOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrBackupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateErrorTopicidOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetOrderTypeDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetOrderItemDictOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetOrderDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroPatOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetOrderDataSetByPatentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetLabDataSetByPatentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetLabReportDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetLabItemResultQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetExamMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetExamAppointOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroExamAppointOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetExamReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroDeptPatOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroAppGrantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroPatMedicalCostByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroLisOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSychroAdtLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmrReportBedDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetHisQNRYRSOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetHisQNCYRSOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetHisQWYYRSOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetHisQMSYRSOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetPatDischargeDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmrReportBedDateICUOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSynchroDischargeDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetEncodingPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrToHisOperationCompleted;
        
        private System.Threading.SendOrPostCallback XinXiDaoRuHisOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetGeneralSQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetdatasetOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGenralDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetTransferInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AAAEmrGenralStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGenralStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetMonitorCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetAutoDisOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSetHisEncodingPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrGetHISCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrSychroBasicPatInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrFollowupOperationCompleted;
        
        private System.Threading.SendOrPostCallback HISGETINFOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDBDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteDBSqlOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrJHEMRGetEmrWebViewParaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgetestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgeByBirthdayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperatingMrStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPATMrStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperatingMrStatus_newOperationCompleted;
        
        private System.Threading.SendOrPostCallback GethuiqiaoshuxueOperationCompleted;
        
        private System.Threading.SendOrPostCallback EMROrigFileListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ArcRlvAppAuditResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback C_TestOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EmrService() {
            this.Url = global::MediRegist.Properties.Settings.Default.yb_upload_WebReference_EmrService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SF_TestCompletedEventHandler SF_TestCompleted;
        
        /// <remarks/>
        public event ArcCancleUpdateStatusCompletedEventHandler ArcCancleUpdateStatusCompleted;
        
        /// <remarks/>
        public event OutpatToInPatCompletedEventHandler OutpatToInPatCompleted;
        
        /// <remarks/>
        public event QYYYGETINFOCompletedEventHandler QYYYGETINFOCompleted;
        
        /// <remarks/>
        public event UpdateInp_NoCompletedEventHandler UpdateInp_NoCompleted;
        
        /// <remarks/>
        public event UnitePatientIDCompletedEventHandler UnitePatientIDCompleted;
        
        /// <remarks/>
        public event UnitePaitentMrFileCompletedEventHandler UnitePaitentMrFileCompleted;
        
        /// <remarks/>
        public event EmrGetHisCostNewCompletedEventHandler EmrGetHisCostNewCompleted;
        
        /// <remarks/>
        public event EmrGetHisCostCompletedEventHandler EmrGetHisCostCompleted;
        
        /// <remarks/>
        public event SFGETINFOCompletedEventHandler SFGETINFOCompleted;
        
        /// <remarks/>
        public event EmrGetPatientIDCompletedEventHandler EmrGetPatientIDCompleted;
        
        /// <remarks/>
        public event GetToHisOutPatInfoBookCompletedEventHandler GetToHisOutPatInfoBookCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event CopyCompletedEventHandler CopyCompleted;
        
        /// <remarks/>
        public event get_fileToLocalCompletedEventHandler get_fileToLocalCompleted;
        
        /// <remarks/>
        public event DTGETINFOCompletedEventHandler DTGETINFOCompleted;
        
        /// <remarks/>
        public event EmrGetCpInfoDataSetCompletedEventHandler EmrGetCpInfoDataSetCompleted;
        
        /// <remarks/>
        public event YYGETINFOCompletedEventHandler YYGETINFOCompleted;
        
        /// <remarks/>
        public event CisGetOutPatientInfoCompletedEventHandler CisGetOutPatientInfoCompleted;
        
        /// <remarks/>
        public event EmrOldOrdersCompletedEventHandler EmrOldOrdersCompleted;
        
        /// <remarks/>
        public event genMrPathCompletedEventHandler genMrPathCompleted;
        
        /// <remarks/>
        public event GetMrSummaryCompletedEventHandler GetMrSummaryCompleted;
        
        /// <remarks/>
        public event GetICUmessageCompletedEventHandler GetICUmessageCompleted;
        
        /// <remarks/>
        public event EmrAccountValidateCompletedEventHandler EmrAccountValidateCompleted;
        
        /// <remarks/>
        public event EmrSynchroDictCompletedEventHandler EmrSynchroDictCompleted;
        
        /// <remarks/>
        public event EmrSynchroZrysCompletedEventHandler EmrSynchroZrysCompleted;
        
        /// <remarks/>
        public event EmrSynchroBedDictCompletedEventHandler EmrSynchroBedDictCompleted;
        
        /// <remarks/>
        public event EmrGetNurseBloodBypatient1CompletedEventHandler EmrGetNurseBloodBypatient1Completed;
        
        /// <remarks/>
        public event EmrGetExamReportNewCompletedEventHandler EmrGetExamReportNewCompleted;
        
        /// <remarks/>
        public event EmrGetNurseBloodBypatientCompletedEventHandler EmrGetNurseBloodBypatientCompleted;
        
        /// <remarks/>
        public event EmrGetEvaluateBloodBypatientCompletedEventHandler EmrGetEvaluateBloodBypatientCompleted;
        
        /// <remarks/>
        public event EmrSynchroUsersCompletedEventHandler EmrSynchroUsersCompleted;
        
        /// <remarks/>
        public event EmrSynchroOperationCodeCompletedEventHandler EmrSynchroOperationCodeCompleted;
        
        /// <remarks/>
        public event EmrSynchroICDCodeCompletedEventHandler EmrSynchroICDCodeCompleted;
        
        /// <remarks/>
        public event EmrSynchroDeptDictCompletedEventHandler EmrSynchroDeptDictCompleted;
        
        /// <remarks/>
        public event EmrSynchroPatForCompletedEventHandler EmrSynchroPatForCompleted;
        
        /// <remarks/>
        public event GetDeptUserCompletedEventHandler GetDeptUserCompleted;
        
        /// <remarks/>
        public event EmrSynchroNewPatCompletedEventHandler EmrSynchroNewPatCompleted;
        
        /// <remarks/>
        public event EmrSynchroOnePatCompletedEventHandler EmrSynchroOnePatCompleted;
        
        /// <remarks/>
        public event EmrSynchroOnePatTestCompletedEventHandler EmrSynchroOnePatTestCompleted;
        
        /// <remarks/>
        public event EmrSynchroNewPatMZCompletedEventHandler EmrSynchroNewPatMZCompleted;
        
        /// <remarks/>
        public event EmrSynchroOutPatCompletedEventHandler EmrSynchroOutPatCompleted;
        
        /// <remarks/>
        public event EmrBackupCompletedEventHandler EmrBackupCompleted;
        
        /// <remarks/>
        public event UpdateErrorTopicidCompletedEventHandler UpdateErrorTopicidCompleted;
        
        /// <remarks/>
        public event EmrGetOrderTypeDictCompletedEventHandler EmrGetOrderTypeDictCompleted;
        
        /// <remarks/>
        public event EmrGetOrderItemDictCompletedEventHandler EmrGetOrderItemDictCompleted;
        
        /// <remarks/>
        public event EmrGetOrderDataSetCompletedEventHandler EmrGetOrderDataSetCompleted;
        
        /// <remarks/>
        public event EmrSynchroPatOrderCompletedEventHandler EmrSynchroPatOrderCompleted;
        
        /// <remarks/>
        public event EmrGetOrderDataSetByPatentIDCompletedEventHandler EmrGetOrderDataSetByPatentIDCompleted;
        
        /// <remarks/>
        public event EmrGetLabDataSetByPatentIDCompletedEventHandler EmrGetLabDataSetByPatentIDCompleted;
        
        /// <remarks/>
        public event EmrGetLabReportDataSetCompletedEventHandler EmrGetLabReportDataSetCompleted;
        
        /// <remarks/>
        public event EmrGetLabItemResultQueryCompletedEventHandler EmrGetLabItemResultQueryCompleted;
        
        /// <remarks/>
        public event EmrGetExamMasterCompletedEventHandler EmrGetExamMasterCompleted;
        
        /// <remarks/>
        public event EmrGetExamAppointCompletedEventHandler EmrGetExamAppointCompleted;
        
        /// <remarks/>
        public event EmrSynchroExamAppointCompletedEventHandler EmrSynchroExamAppointCompleted;
        
        /// <remarks/>
        public event EmrGetExamReportCompletedEventHandler EmrGetExamReportCompleted;
        
        /// <remarks/>
        public event EmrSynchroDeptPatOrderCompletedEventHandler EmrSynchroDeptPatOrderCompleted;
        
        /// <remarks/>
        public event EmrSynchroAppGrantsCompletedEventHandler EmrSynchroAppGrantsCompleted;
        
        /// <remarks/>
        public event EmrSynchroPatMedicalCostByIdCompletedEventHandler EmrSynchroPatMedicalCostByIdCompleted;
        
        /// <remarks/>
        public event EmrSynchroLisCompletedEventHandler EmrSynchroLisCompleted;
        
        /// <remarks/>
        public event EmrSychroAdtLogCompletedEventHandler EmrSychroAdtLogCompleted;
        
        /// <remarks/>
        public event UpdateEmrReportBedDateCompletedEventHandler UpdateEmrReportBedDateCompleted;
        
        /// <remarks/>
        public event EmrGetHisQNRYRSCompletedEventHandler EmrGetHisQNRYRSCompleted;
        
        /// <remarks/>
        public event EmrGetHisQNCYRSCompletedEventHandler EmrGetHisQNCYRSCompleted;
        
        /// <remarks/>
        public event EmrGetHisQWYYRSCompletedEventHandler EmrGetHisQWYYRSCompleted;
        
        /// <remarks/>
        public event EmrGetHisQMSYRSCompletedEventHandler EmrGetHisQMSYRSCompleted;
        
        /// <remarks/>
        public event EmrGetPatDischargeDateTimeCompletedEventHandler EmrGetPatDischargeDateTimeCompleted;
        
        /// <remarks/>
        public event UpdateEmrReportBedDateICUCompletedEventHandler UpdateEmrReportBedDateICUCompleted;
        
        /// <remarks/>
        public event EmrSynchroDischargeDateTimeCompletedEventHandler EmrSynchroDischargeDateTimeCompleted;
        
        /// <remarks/>
        public event EmrGetEncodingPasswordCompletedEventHandler EmrGetEncodingPasswordCompleted;
        
        /// <remarks/>
        public event EmrToHisCompletedEventHandler EmrToHisCompleted;
        
        /// <remarks/>
        public event XinXiDaoRuHisCompletedEventHandler XinXiDaoRuHisCompleted;
        
        /// <remarks/>
        public event EmrGetGeneralSQLCompletedEventHandler EmrGetGeneralSQLCompleted;
        
        /// <remarks/>
        public event GetdatasetCompletedEventHandler GetdatasetCompleted;
        
        /// <remarks/>
        public event EmrGenralDataSetCompletedEventHandler EmrGenralDataSetCompleted;
        
        /// <remarks/>
        public event EmrGetTransferInfoCompletedEventHandler EmrGetTransferInfoCompleted;
        
        /// <remarks/>
        public event AAAEmrGenralStrCompletedEventHandler AAAEmrGenralStrCompleted;
        
        /// <remarks/>
        public event EmrGenralStrCompletedEventHandler EmrGenralStrCompleted;
        
        /// <remarks/>
        public event EmrGetMonitorCodeCompletedEventHandler EmrGetMonitorCodeCompleted;
        
        /// <remarks/>
        public event EmrGetAutoDisCompletedEventHandler EmrGetAutoDisCompleted;
        
        /// <remarks/>
        public event EmrSetHisEncodingPasswordCompletedEventHandler EmrSetHisEncodingPasswordCompleted;
        
        /// <remarks/>
        public event EmrGetHISCostsCompletedEventHandler EmrGetHISCostsCompleted;
        
        /// <remarks/>
        public event EmrSychroBasicPatInfoCompletedEventHandler EmrSychroBasicPatInfoCompleted;
        
        /// <remarks/>
        public event EmrFollowupCompletedEventHandler EmrFollowupCompleted;
        
        /// <remarks/>
        public event HISGETINFOCompletedEventHandler HISGETINFOCompleted;
        
        /// <remarks/>
        public event GetDBDataSetCompletedEventHandler GetDBDataSetCompleted;
        
        /// <remarks/>
        public event ExcuteDBSqlCompletedEventHandler ExcuteDBSqlCompleted;
        
        /// <remarks/>
        public event EmrJHEMRGetEmrWebViewParaCompletedEventHandler EmrJHEMRGetEmrWebViewParaCompleted;
        
        /// <remarks/>
        public event GetOpCompletedEventHandler GetOpCompleted;
        
        /// <remarks/>
        public event GetAgetestCompletedEventHandler GetAgetestCompleted;
        
        /// <remarks/>
        public event GetAgeByBirthdayCompletedEventHandler GetAgeByBirthdayCompleted;
        
        /// <remarks/>
        public event GetOperatingMrStatusCompletedEventHandler GetOperatingMrStatusCompleted;
        
        /// <remarks/>
        public event GetPATMrStatusCompletedEventHandler GetPATMrStatusCompleted;
        
        /// <remarks/>
        public event GetOperatingMrStatus_newCompletedEventHandler GetOperatingMrStatus_newCompleted;
        
        /// <remarks/>
        public event GethuiqiaoshuxueCompletedEventHandler GethuiqiaoshuxueCompleted;
        
        /// <remarks/>
        public event EMROrigFileListCompletedEventHandler EMROrigFileListCompleted;
        
        /// <remarks/>
        public event ArcRlvAppAuditResultCompletedEventHandler ArcRlvAppAuditResultCompleted;
        
        /// <remarks/>
        public event C_TestCompletedEventHandler C_TestCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SF_Test", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SF_Test(string strUserId, string strPatientId, string strDiagnosis) {
            object[] results = this.Invoke("SF_Test", new object[] {
                        strUserId,
                        strPatientId,
                        strDiagnosis});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SF_TestAsync(string strUserId, string strPatientId, string strDiagnosis) {
            this.SF_TestAsync(strUserId, strPatientId, strDiagnosis, null);
        }
        
        /// <remarks/>
        public void SF_TestAsync(string strUserId, string strPatientId, string strDiagnosis, object userState) {
            if ((this.SF_TestOperationCompleted == null)) {
                this.SF_TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSF_TestOperationCompleted);
            }
            this.InvokeAsync("SF_Test", new object[] {
                        strUserId,
                        strPatientId,
                        strDiagnosis}, this.SF_TestOperationCompleted, userState);
        }
        
        private void OnSF_TestOperationCompleted(object arg) {
            if ((this.SF_TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SF_TestCompleted(this, new SF_TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ArcCancleUpdateStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ArcCancleUpdateStatus(string patient_id, string visit_id) {
            this.Invoke("ArcCancleUpdateStatus", new object[] {
                        patient_id,
                        visit_id});
        }
        
        /// <remarks/>
        public void ArcCancleUpdateStatusAsync(string patient_id, string visit_id) {
            this.ArcCancleUpdateStatusAsync(patient_id, visit_id, null);
        }
        
        /// <remarks/>
        public void ArcCancleUpdateStatusAsync(string patient_id, string visit_id, object userState) {
            if ((this.ArcCancleUpdateStatusOperationCompleted == null)) {
                this.ArcCancleUpdateStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArcCancleUpdateStatusOperationCompleted);
            }
            this.InvokeAsync("ArcCancleUpdateStatus", new object[] {
                        patient_id,
                        visit_id}, this.ArcCancleUpdateStatusOperationCompleted, userState);
        }
        
        private void OnArcCancleUpdateStatusOperationCompleted(object arg) {
            if ((this.ArcCancleUpdateStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ArcCancleUpdateStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OutpatToInPat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void OutpatToInPat() {
            this.Invoke("OutpatToInPat", new object[0]);
        }
        
        /// <remarks/>
        public void OutpatToInPatAsync() {
            this.OutpatToInPatAsync(null);
        }
        
        /// <remarks/>
        public void OutpatToInPatAsync(object userState) {
            if ((this.OutpatToInPatOperationCompleted == null)) {
                this.OutpatToInPatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOutpatToInPatOperationCompleted);
            }
            this.InvokeAsync("OutpatToInPat", new object[0], this.OutpatToInPatOperationCompleted, userState);
        }
        
        private void OnOutpatToInPatOperationCompleted(object arg) {
            if ((this.OutpatToInPatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OutpatToInPatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QYYYGETINFO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QYYYGETINFO(string strPatientId, string nVisitID, string strFlag) {
            object[] results = this.Invoke("QYYYGETINFO", new object[] {
                        strPatientId,
                        nVisitID,
                        strFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QYYYGETINFOAsync(string strPatientId, string nVisitID, string strFlag) {
            this.QYYYGETINFOAsync(strPatientId, nVisitID, strFlag, null);
        }
        
        /// <remarks/>
        public void QYYYGETINFOAsync(string strPatientId, string nVisitID, string strFlag, object userState) {
            if ((this.QYYYGETINFOOperationCompleted == null)) {
                this.QYYYGETINFOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQYYYGETINFOOperationCompleted);
            }
            this.InvokeAsync("QYYYGETINFO", new object[] {
                        strPatientId,
                        nVisitID,
                        strFlag}, this.QYYYGETINFOOperationCompleted, userState);
        }
        
        private void OnQYYYGETINFOOperationCompleted(object arg) {
            if ((this.QYYYGETINFOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QYYYGETINFOCompleted(this, new QYYYGETINFOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateInp_No", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateInp_No() {
            this.Invoke("UpdateInp_No", new object[0]);
        }
        
        /// <remarks/>
        public void UpdateInp_NoAsync() {
            this.UpdateInp_NoAsync(null);
        }
        
        /// <remarks/>
        public void UpdateInp_NoAsync(object userState) {
            if ((this.UpdateInp_NoOperationCompleted == null)) {
                this.UpdateInp_NoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInp_NoOperationCompleted);
            }
            this.InvokeAsync("UpdateInp_No", new object[0], this.UpdateInp_NoOperationCompleted, userState);
        }
        
        private void OnUpdateInp_NoOperationCompleted(object arg) {
            if ((this.UpdateInp_NoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInp_NoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnitePatientID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnitePatientID(string strPatientIdOld, string strPatientIdNew, string IVisitID, string IVisitIDOld) {
            this.Invoke("UnitePatientID", new object[] {
                        strPatientIdOld,
                        strPatientIdNew,
                        IVisitID,
                        IVisitIDOld});
        }
        
        /// <remarks/>
        public void UnitePatientIDAsync(string strPatientIdOld, string strPatientIdNew, string IVisitID, string IVisitIDOld) {
            this.UnitePatientIDAsync(strPatientIdOld, strPatientIdNew, IVisitID, IVisitIDOld, null);
        }
        
        /// <remarks/>
        public void UnitePatientIDAsync(string strPatientIdOld, string strPatientIdNew, string IVisitID, string IVisitIDOld, object userState) {
            if ((this.UnitePatientIDOperationCompleted == null)) {
                this.UnitePatientIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnitePatientIDOperationCompleted);
            }
            this.InvokeAsync("UnitePatientID", new object[] {
                        strPatientIdOld,
                        strPatientIdNew,
                        IVisitID,
                        IVisitIDOld}, this.UnitePatientIDOperationCompleted, userState);
        }
        
        private void OnUnitePatientIDOperationCompleted(object arg) {
            if ((this.UnitePatientIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnitePatientIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnitePaitentMrFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnitePaitentMrFile(string strPatientIdOld, string strPatientIdNew, string IVisitID, string IVisitIDOld) {
            object[] results = this.Invoke("UnitePaitentMrFile", new object[] {
                        strPatientIdOld,
                        strPatientIdNew,
                        IVisitID,
                        IVisitIDOld});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnitePaitentMrFileAsync(string strPatientIdOld, string strPatientIdNew, string IVisitID, string IVisitIDOld) {
            this.UnitePaitentMrFileAsync(strPatientIdOld, strPatientIdNew, IVisitID, IVisitIDOld, null);
        }
        
        /// <remarks/>
        public void UnitePaitentMrFileAsync(string strPatientIdOld, string strPatientIdNew, string IVisitID, string IVisitIDOld, object userState) {
            if ((this.UnitePaitentMrFileOperationCompleted == null)) {
                this.UnitePaitentMrFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnitePaitentMrFileOperationCompleted);
            }
            this.InvokeAsync("UnitePaitentMrFile", new object[] {
                        strPatientIdOld,
                        strPatientIdNew,
                        IVisitID,
                        IVisitIDOld}, this.UnitePaitentMrFileOperationCompleted, userState);
        }
        
        private void OnUnitePaitentMrFileOperationCompleted(object arg) {
            if ((this.UnitePaitentMrFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnitePaitentMrFileCompleted(this, new UnitePaitentMrFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetHisCostNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrGetHisCostNew(string strPatientID, string strVisitID) {
            object[] results = this.Invoke("EmrGetHisCostNew", new object[] {
                        strPatientID,
                        strVisitID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetHisCostNewAsync(string strPatientID, string strVisitID) {
            this.EmrGetHisCostNewAsync(strPatientID, strVisitID, null);
        }
        
        /// <remarks/>
        public void EmrGetHisCostNewAsync(string strPatientID, string strVisitID, object userState) {
            if ((this.EmrGetHisCostNewOperationCompleted == null)) {
                this.EmrGetHisCostNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetHisCostNewOperationCompleted);
            }
            this.InvokeAsync("EmrGetHisCostNew", new object[] {
                        strPatientID,
                        strVisitID}, this.EmrGetHisCostNewOperationCompleted, userState);
        }
        
        private void OnEmrGetHisCostNewOperationCompleted(object arg) {
            if ((this.EmrGetHisCostNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetHisCostNewCompleted(this, new EmrGetHisCostNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetHisCost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EmrGetHisCost(string strPatientID, string strVisitID) {
            object[] results = this.Invoke("EmrGetHisCost", new object[] {
                        strPatientID,
                        strVisitID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetHisCostAsync(string strPatientID, string strVisitID) {
            this.EmrGetHisCostAsync(strPatientID, strVisitID, null);
        }
        
        /// <remarks/>
        public void EmrGetHisCostAsync(string strPatientID, string strVisitID, object userState) {
            if ((this.EmrGetHisCostOperationCompleted == null)) {
                this.EmrGetHisCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetHisCostOperationCompleted);
            }
            this.InvokeAsync("EmrGetHisCost", new object[] {
                        strPatientID,
                        strVisitID}, this.EmrGetHisCostOperationCompleted, userState);
        }
        
        private void OnEmrGetHisCostOperationCompleted(object arg) {
            if ((this.EmrGetHisCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetHisCostCompleted(this, new EmrGetHisCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SFGETINFO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SFGETINFO(string strPatientId, string nVisitID, string strFlag) {
            object[] results = this.Invoke("SFGETINFO", new object[] {
                        strPatientId,
                        nVisitID,
                        strFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SFGETINFOAsync(string strPatientId, string nVisitID, string strFlag) {
            this.SFGETINFOAsync(strPatientId, nVisitID, strFlag, null);
        }
        
        /// <remarks/>
        public void SFGETINFOAsync(string strPatientId, string nVisitID, string strFlag, object userState) {
            if ((this.SFGETINFOOperationCompleted == null)) {
                this.SFGETINFOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSFGETINFOOperationCompleted);
            }
            this.InvokeAsync("SFGETINFO", new object[] {
                        strPatientId,
                        nVisitID,
                        strFlag}, this.SFGETINFOOperationCompleted, userState);
        }
        
        private void OnSFGETINFOOperationCompleted(object arg) {
            if ((this.SFGETINFOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SFGETINFOCompleted(this, new SFGETINFOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetPatientID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrGetPatientID(string id_no) {
            object[] results = this.Invoke("EmrGetPatientID", new object[] {
                        id_no});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetPatientIDAsync(string id_no) {
            this.EmrGetPatientIDAsync(id_no, null);
        }
        
        /// <remarks/>
        public void EmrGetPatientIDAsync(string id_no, object userState) {
            if ((this.EmrGetPatientIDOperationCompleted == null)) {
                this.EmrGetPatientIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetPatientIDOperationCompleted);
            }
            this.InvokeAsync("EmrGetPatientID", new object[] {
                        id_no}, this.EmrGetPatientIDOperationCompleted, userState);
        }
        
        private void OnEmrGetPatientIDOperationCompleted(object arg) {
            if ((this.EmrGetPatientIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetPatientIDCompleted(this, new EmrGetPatientIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetToHisOutPatInfoBook", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetToHisOutPatInfoBook(string strPatient_id, int strVisit_id) {
            object[] results = this.Invoke("GetToHisOutPatInfoBook", new object[] {
                        strPatient_id,
                        strVisit_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetToHisOutPatInfoBookAsync(string strPatient_id, int strVisit_id) {
            this.GetToHisOutPatInfoBookAsync(strPatient_id, strVisit_id, null);
        }
        
        /// <remarks/>
        public void GetToHisOutPatInfoBookAsync(string strPatient_id, int strVisit_id, object userState) {
            if ((this.GetToHisOutPatInfoBookOperationCompleted == null)) {
                this.GetToHisOutPatInfoBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetToHisOutPatInfoBookOperationCompleted);
            }
            this.InvokeAsync("GetToHisOutPatInfoBook", new object[] {
                        strPatient_id,
                        strVisit_id}, this.GetToHisOutPatInfoBookOperationCompleted, userState);
        }
        
        private void OnGetToHisOutPatInfoBookOperationCompleted(object arg) {
            if ((this.GetToHisOutPatInfoBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetToHisOutPatInfoBookCompleted(this, new GetToHisOutPatInfoBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Copy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Copy(string strMrPath, string filename) {
            object[] results = this.Invoke("Copy", new object[] {
                        strMrPath,
                        filename});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CopyAsync(string strMrPath, string filename) {
            this.CopyAsync(strMrPath, filename, null);
        }
        
        /// <remarks/>
        public void CopyAsync(string strMrPath, string filename, object userState) {
            if ((this.CopyOperationCompleted == null)) {
                this.CopyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyOperationCompleted);
            }
            this.InvokeAsync("Copy", new object[] {
                        strMrPath,
                        filename}, this.CopyOperationCompleted, userState);
        }
        
        private void OnCopyOperationCompleted(object arg) {
            if ((this.CopyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyCompleted(this, new CopyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_fileToLocal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string get_fileToLocal(string host_addr, string strPatientID, int nVisitID, string local_file, int option) {
            object[] results = this.Invoke("get_fileToLocal", new object[] {
                        host_addr,
                        strPatientID,
                        nVisitID,
                        local_file,
                        option});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_fileToLocalAsync(string host_addr, string strPatientID, int nVisitID, string local_file, int option) {
            this.get_fileToLocalAsync(host_addr, strPatientID, nVisitID, local_file, option, null);
        }
        
        /// <remarks/>
        public void get_fileToLocalAsync(string host_addr, string strPatientID, int nVisitID, string local_file, int option, object userState) {
            if ((this.get_fileToLocalOperationCompleted == null)) {
                this.get_fileToLocalOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_fileToLocalOperationCompleted);
            }
            this.InvokeAsync("get_fileToLocal", new object[] {
                        host_addr,
                        strPatientID,
                        nVisitID,
                        local_file,
                        option}, this.get_fileToLocalOperationCompleted, userState);
        }
        
        private void Onget_fileToLocalOperationCompleted(object arg) {
            if ((this.get_fileToLocalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_fileToLocalCompleted(this, new get_fileToLocalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DTGETINFO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DTGETINFO(string strPatientId, string nVisitID, string strFlag) {
            object[] results = this.Invoke("DTGETINFO", new object[] {
                        strPatientId,
                        nVisitID,
                        strFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DTGETINFOAsync(string strPatientId, string nVisitID, string strFlag) {
            this.DTGETINFOAsync(strPatientId, nVisitID, strFlag, null);
        }
        
        /// <remarks/>
        public void DTGETINFOAsync(string strPatientId, string nVisitID, string strFlag, object userState) {
            if ((this.DTGETINFOOperationCompleted == null)) {
                this.DTGETINFOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDTGETINFOOperationCompleted);
            }
            this.InvokeAsync("DTGETINFO", new object[] {
                        strPatientId,
                        nVisitID,
                        strFlag}, this.DTGETINFOOperationCompleted, userState);
        }
        
        private void OnDTGETINFOOperationCompleted(object arg) {
            if ((this.DTGETINFOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DTGETINFOCompleted(this, new DTGETINFOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetCpInfoDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetCpInfoDataSet() {
            object[] results = this.Invoke("EmrGetCpInfoDataSet", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetCpInfoDataSetAsync() {
            this.EmrGetCpInfoDataSetAsync(null);
        }
        
        /// <remarks/>
        public void EmrGetCpInfoDataSetAsync(object userState) {
            if ((this.EmrGetCpInfoDataSetOperationCompleted == null)) {
                this.EmrGetCpInfoDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetCpInfoDataSetOperationCompleted);
            }
            this.InvokeAsync("EmrGetCpInfoDataSet", new object[0], this.EmrGetCpInfoDataSetOperationCompleted, userState);
        }
        
        private void OnEmrGetCpInfoDataSetOperationCompleted(object arg) {
            if ((this.EmrGetCpInfoDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetCpInfoDataSetCompleted(this, new EmrGetCpInfoDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/YYGETINFO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string YYGETINFO(string strPatientId, string nVisitID, string strFlag) {
            object[] results = this.Invoke("YYGETINFO", new object[] {
                        strPatientId,
                        nVisitID,
                        strFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void YYGETINFOAsync(string strPatientId, string nVisitID, string strFlag) {
            this.YYGETINFOAsync(strPatientId, nVisitID, strFlag, null);
        }
        
        /// <remarks/>
        public void YYGETINFOAsync(string strPatientId, string nVisitID, string strFlag, object userState) {
            if ((this.YYGETINFOOperationCompleted == null)) {
                this.YYGETINFOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnYYGETINFOOperationCompleted);
            }
            this.InvokeAsync("YYGETINFO", new object[] {
                        strPatientId,
                        nVisitID,
                        strFlag}, this.YYGETINFOOperationCompleted, userState);
        }
        
        private void OnYYGETINFOOperationCompleted(object arg) {
            if ((this.YYGETINFOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.YYGETINFOCompleted(this, new YYGETINFOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CisGetOutPatientInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CisGetOutPatientInfo(string strPatientId, string nVisitID, string strFlag) {
            object[] results = this.Invoke("CisGetOutPatientInfo", new object[] {
                        strPatientId,
                        nVisitID,
                        strFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CisGetOutPatientInfoAsync(string strPatientId, string nVisitID, string strFlag) {
            this.CisGetOutPatientInfoAsync(strPatientId, nVisitID, strFlag, null);
        }
        
        /// <remarks/>
        public void CisGetOutPatientInfoAsync(string strPatientId, string nVisitID, string strFlag, object userState) {
            if ((this.CisGetOutPatientInfoOperationCompleted == null)) {
                this.CisGetOutPatientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCisGetOutPatientInfoOperationCompleted);
            }
            this.InvokeAsync("CisGetOutPatientInfo", new object[] {
                        strPatientId,
                        nVisitID,
                        strFlag}, this.CisGetOutPatientInfoOperationCompleted, userState);
        }
        
        private void OnCisGetOutPatientInfoOperationCompleted(object arg) {
            if ((this.CisGetOutPatientInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CisGetOutPatientInfoCompleted(this, new CisGetOutPatientInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrOldOrders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrOldOrders() {
            object[] results = this.Invoke("EmrOldOrders", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrOldOrdersAsync() {
            this.EmrOldOrdersAsync(null);
        }
        
        /// <remarks/>
        public void EmrOldOrdersAsync(object userState) {
            if ((this.EmrOldOrdersOperationCompleted == null)) {
                this.EmrOldOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrOldOrdersOperationCompleted);
            }
            this.InvokeAsync("EmrOldOrders", new object[0], this.EmrOldOrdersOperationCompleted, userState);
        }
        
        private void OnEmrOldOrdersOperationCompleted(object arg) {
            if ((this.EmrOldOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrOldOrdersCompleted(this, new EmrOldOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/genMrPath", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string genMrPath(string strPatientID) {
            object[] results = this.Invoke("genMrPath", new object[] {
                        strPatientID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void genMrPathAsync(string strPatientID) {
            this.genMrPathAsync(strPatientID, null);
        }
        
        /// <remarks/>
        public void genMrPathAsync(string strPatientID, object userState) {
            if ((this.genMrPathOperationCompleted == null)) {
                this.genMrPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenMrPathOperationCompleted);
            }
            this.InvokeAsync("genMrPath", new object[] {
                        strPatientID}, this.genMrPathOperationCompleted, userState);
        }
        
        private void OngenMrPathOperationCompleted(object arg) {
            if ((this.genMrPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.genMrPathCompleted(this, new genMrPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMrSummary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMrSummary(string strPatientId, int nVisitId) {
            object[] results = this.Invoke("GetMrSummary", new object[] {
                        strPatientId,
                        nVisitId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMrSummaryAsync(string strPatientId, int nVisitId) {
            this.GetMrSummaryAsync(strPatientId, nVisitId, null);
        }
        
        /// <remarks/>
        public void GetMrSummaryAsync(string strPatientId, int nVisitId, object userState) {
            if ((this.GetMrSummaryOperationCompleted == null)) {
                this.GetMrSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMrSummaryOperationCompleted);
            }
            this.InvokeAsync("GetMrSummary", new object[] {
                        strPatientId,
                        nVisitId}, this.GetMrSummaryOperationCompleted, userState);
        }
        
        private void OnGetMrSummaryOperationCompleted(object arg) {
            if ((this.GetMrSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMrSummaryCompleted(this, new GetMrSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetICUmessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetICUmessage(string strPatientId, int nVisitId) {
            object[] results = this.Invoke("GetICUmessage", new object[] {
                        strPatientId,
                        nVisitId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetICUmessageAsync(string strPatientId, int nVisitId) {
            this.GetICUmessageAsync(strPatientId, nVisitId, null);
        }
        
        /// <remarks/>
        public void GetICUmessageAsync(string strPatientId, int nVisitId, object userState) {
            if ((this.GetICUmessageOperationCompleted == null)) {
                this.GetICUmessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetICUmessageOperationCompleted);
            }
            this.InvokeAsync("GetICUmessage", new object[] {
                        strPatientId,
                        nVisitId}, this.GetICUmessageOperationCompleted, userState);
        }
        
        private void OnGetICUmessageOperationCompleted(object arg) {
            if ((this.GetICUmessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetICUmessageCompleted(this, new GetICUmessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrAccountValidate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrAccountValidate(string strUserID, string strUSERPWD, string strWKStation) {
            object[] results = this.Invoke("EmrAccountValidate", new object[] {
                        strUserID,
                        strUSERPWD,
                        strWKStation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrAccountValidateAsync(string strUserID, string strUSERPWD, string strWKStation) {
            this.EmrAccountValidateAsync(strUserID, strUSERPWD, strWKStation, null);
        }
        
        /// <remarks/>
        public void EmrAccountValidateAsync(string strUserID, string strUSERPWD, string strWKStation, object userState) {
            if ((this.EmrAccountValidateOperationCompleted == null)) {
                this.EmrAccountValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrAccountValidateOperationCompleted);
            }
            this.InvokeAsync("EmrAccountValidate", new object[] {
                        strUserID,
                        strUSERPWD,
                        strWKStation}, this.EmrAccountValidateOperationCompleted, userState);
        }
        
        private void OnEmrAccountValidateOperationCompleted(object arg) {
            if ((this.EmrAccountValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrAccountValidateCompleted(this, new EmrAccountValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroDict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroDict() {
            this.Invoke("EmrSynchroDict", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroDictAsync() {
            this.EmrSynchroDictAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroDictAsync(object userState) {
            if ((this.EmrSynchroDictOperationCompleted == null)) {
                this.EmrSynchroDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroDictOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroDict", new object[0], this.EmrSynchroDictOperationCompleted, userState);
        }
        
        private void OnEmrSynchroDictOperationCompleted(object arg) {
            if ((this.EmrSynchroDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroDictCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroZrys", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroZrys() {
            this.Invoke("EmrSynchroZrys", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroZrysAsync() {
            this.EmrSynchroZrysAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroZrysAsync(object userState) {
            if ((this.EmrSynchroZrysOperationCompleted == null)) {
                this.EmrSynchroZrysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroZrysOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroZrys", new object[0], this.EmrSynchroZrysOperationCompleted, userState);
        }
        
        private void OnEmrSynchroZrysOperationCompleted(object arg) {
            if ((this.EmrSynchroZrysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroZrysCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroBedDict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroBedDict(string strDeptCode) {
            this.Invoke("EmrSynchroBedDict", new object[] {
                        strDeptCode});
        }
        
        /// <remarks/>
        public void EmrSynchroBedDictAsync(string strDeptCode) {
            this.EmrSynchroBedDictAsync(strDeptCode, null);
        }
        
        /// <remarks/>
        public void EmrSynchroBedDictAsync(string strDeptCode, object userState) {
            if ((this.EmrSynchroBedDictOperationCompleted == null)) {
                this.EmrSynchroBedDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroBedDictOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroBedDict", new object[] {
                        strDeptCode}, this.EmrSynchroBedDictOperationCompleted, userState);
        }
        
        private void OnEmrSynchroBedDictOperationCompleted(object arg) {
            if ((this.EmrSynchroBedDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroBedDictCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetNurseBloodBypatient1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetNurseBloodBypatient1(string strPatientID, int intVisitID) {
            object[] results = this.Invoke("EmrGetNurseBloodBypatient1", new object[] {
                        strPatientID,
                        intVisitID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetNurseBloodBypatient1Async(string strPatientID, int intVisitID) {
            this.EmrGetNurseBloodBypatient1Async(strPatientID, intVisitID, null);
        }
        
        /// <remarks/>
        public void EmrGetNurseBloodBypatient1Async(string strPatientID, int intVisitID, object userState) {
            if ((this.EmrGetNurseBloodBypatient1OperationCompleted == null)) {
                this.EmrGetNurseBloodBypatient1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetNurseBloodBypatient1OperationCompleted);
            }
            this.InvokeAsync("EmrGetNurseBloodBypatient1", new object[] {
                        strPatientID,
                        intVisitID}, this.EmrGetNurseBloodBypatient1OperationCompleted, userState);
        }
        
        private void OnEmrGetNurseBloodBypatient1OperationCompleted(object arg) {
            if ((this.EmrGetNurseBloodBypatient1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetNurseBloodBypatient1Completed(this, new EmrGetNurseBloodBypatient1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetExamReportNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetExamReportNew(string patientid) {
            object[] results = this.Invoke("EmrGetExamReportNew", new object[] {
                        patientid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetExamReportNewAsync(string patientid) {
            this.EmrGetExamReportNewAsync(patientid, null);
        }
        
        /// <remarks/>
        public void EmrGetExamReportNewAsync(string patientid, object userState) {
            if ((this.EmrGetExamReportNewOperationCompleted == null)) {
                this.EmrGetExamReportNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetExamReportNewOperationCompleted);
            }
            this.InvokeAsync("EmrGetExamReportNew", new object[] {
                        patientid}, this.EmrGetExamReportNewOperationCompleted, userState);
        }
        
        private void OnEmrGetExamReportNewOperationCompleted(object arg) {
            if ((this.EmrGetExamReportNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetExamReportNewCompleted(this, new EmrGetExamReportNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetNurseBloodBypatient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetNurseBloodBypatient(string strPatientID, int intVisitID, System.DateTime datTime) {
            object[] results = this.Invoke("EmrGetNurseBloodBypatient", new object[] {
                        strPatientID,
                        intVisitID,
                        datTime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetNurseBloodBypatientAsync(string strPatientID, int intVisitID, System.DateTime datTime) {
            this.EmrGetNurseBloodBypatientAsync(strPatientID, intVisitID, datTime, null);
        }
        
        /// <remarks/>
        public void EmrGetNurseBloodBypatientAsync(string strPatientID, int intVisitID, System.DateTime datTime, object userState) {
            if ((this.EmrGetNurseBloodBypatientOperationCompleted == null)) {
                this.EmrGetNurseBloodBypatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetNurseBloodBypatientOperationCompleted);
            }
            this.InvokeAsync("EmrGetNurseBloodBypatient", new object[] {
                        strPatientID,
                        intVisitID,
                        datTime}, this.EmrGetNurseBloodBypatientOperationCompleted, userState);
        }
        
        private void OnEmrGetNurseBloodBypatientOperationCompleted(object arg) {
            if ((this.EmrGetNurseBloodBypatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetNurseBloodBypatientCompleted(this, new EmrGetNurseBloodBypatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetEvaluateBloodBypatient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetEvaluateBloodBypatient(string strPatientID, int intVisitID) {
            object[] results = this.Invoke("EmrGetEvaluateBloodBypatient", new object[] {
                        strPatientID,
                        intVisitID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetEvaluateBloodBypatientAsync(string strPatientID, int intVisitID) {
            this.EmrGetEvaluateBloodBypatientAsync(strPatientID, intVisitID, null);
        }
        
        /// <remarks/>
        public void EmrGetEvaluateBloodBypatientAsync(string strPatientID, int intVisitID, object userState) {
            if ((this.EmrGetEvaluateBloodBypatientOperationCompleted == null)) {
                this.EmrGetEvaluateBloodBypatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetEvaluateBloodBypatientOperationCompleted);
            }
            this.InvokeAsync("EmrGetEvaluateBloodBypatient", new object[] {
                        strPatientID,
                        intVisitID}, this.EmrGetEvaluateBloodBypatientOperationCompleted, userState);
        }
        
        private void OnEmrGetEvaluateBloodBypatientOperationCompleted(object arg) {
            if ((this.EmrGetEvaluateBloodBypatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetEvaluateBloodBypatientCompleted(this, new EmrGetEvaluateBloodBypatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroUsers() {
            this.Invoke("EmrSynchroUsers", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroUsersAsync() {
            this.EmrSynchroUsersAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroUsersAsync(object userState) {
            if ((this.EmrSynchroUsersOperationCompleted == null)) {
                this.EmrSynchroUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroUsersOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroUsers", new object[0], this.EmrSynchroUsersOperationCompleted, userState);
        }
        
        private void OnEmrSynchroUsersOperationCompleted(object arg) {
            if ((this.EmrSynchroUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroUsersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroOperationCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroOperationCode() {
            this.Invoke("EmrSynchroOperationCode", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroOperationCodeAsync() {
            this.EmrSynchroOperationCodeAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroOperationCodeAsync(object userState) {
            if ((this.EmrSynchroOperationCodeOperationCompleted == null)) {
                this.EmrSynchroOperationCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroOperationCodeOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroOperationCode", new object[0], this.EmrSynchroOperationCodeOperationCompleted, userState);
        }
        
        private void OnEmrSynchroOperationCodeOperationCompleted(object arg) {
            if ((this.EmrSynchroOperationCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroOperationCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroICDCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroICDCode() {
            this.Invoke("EmrSynchroICDCode", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroICDCodeAsync() {
            this.EmrSynchroICDCodeAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroICDCodeAsync(object userState) {
            if ((this.EmrSynchroICDCodeOperationCompleted == null)) {
                this.EmrSynchroICDCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroICDCodeOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroICDCode", new object[0], this.EmrSynchroICDCodeOperationCompleted, userState);
        }
        
        private void OnEmrSynchroICDCodeOperationCompleted(object arg) {
            if ((this.EmrSynchroICDCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroICDCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroDeptDict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroDeptDict() {
            this.Invoke("EmrSynchroDeptDict", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroDeptDictAsync() {
            this.EmrSynchroDeptDictAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroDeptDictAsync(object userState) {
            if ((this.EmrSynchroDeptDictOperationCompleted == null)) {
                this.EmrSynchroDeptDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroDeptDictOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroDeptDict", new object[0], this.EmrSynchroDeptDictOperationCompleted, userState);
        }
        
        private void OnEmrSynchroDeptDictOperationCompleted(object arg) {
            if ((this.EmrSynchroDeptDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroDeptDictCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroPatFor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroPatFor(string Dept) {
            this.Invoke("EmrSynchroPatFor", new object[] {
                        Dept});
        }
        
        /// <remarks/>
        public void EmrSynchroPatForAsync(string Dept) {
            this.EmrSynchroPatForAsync(Dept, null);
        }
        
        /// <remarks/>
        public void EmrSynchroPatForAsync(string Dept, object userState) {
            if ((this.EmrSynchroPatForOperationCompleted == null)) {
                this.EmrSynchroPatForOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroPatForOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroPatFor", new object[] {
                        Dept}, this.EmrSynchroPatForOperationCompleted, userState);
        }
        
        private void OnEmrSynchroPatForOperationCompleted(object arg) {
            if ((this.EmrSynchroPatForCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroPatForCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeptUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDeptUser(string strDeptCode, bool bIncludeCurUser) {
            object[] results = this.Invoke("GetDeptUser", new object[] {
                        strDeptCode,
                        bIncludeCurUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeptUserAsync(string strDeptCode, bool bIncludeCurUser) {
            this.GetDeptUserAsync(strDeptCode, bIncludeCurUser, null);
        }
        
        /// <remarks/>
        public void GetDeptUserAsync(string strDeptCode, bool bIncludeCurUser, object userState) {
            if ((this.GetDeptUserOperationCompleted == null)) {
                this.GetDeptUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeptUserOperationCompleted);
            }
            this.InvokeAsync("GetDeptUser", new object[] {
                        strDeptCode,
                        bIncludeCurUser}, this.GetDeptUserOperationCompleted, userState);
        }
        
        private void OnGetDeptUserOperationCompleted(object arg) {
            if ((this.GetDeptUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeptUserCompleted(this, new GetDeptUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroNewPat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroNewPat(string nDeptID) {
            this.Invoke("EmrSynchroNewPat", new object[] {
                        nDeptID});
        }
        
        /// <remarks/>
        public void EmrSynchroNewPatAsync(string nDeptID) {
            this.EmrSynchroNewPatAsync(nDeptID, null);
        }
        
        /// <remarks/>
        public void EmrSynchroNewPatAsync(string nDeptID, object userState) {
            if ((this.EmrSynchroNewPatOperationCompleted == null)) {
                this.EmrSynchroNewPatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroNewPatOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroNewPat", new object[] {
                        nDeptID}, this.EmrSynchroNewPatOperationCompleted, userState);
        }
        
        private void OnEmrSynchroNewPatOperationCompleted(object arg) {
            if ((this.EmrSynchroNewPatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroNewPatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroOnePat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroOnePat(string strInpNo, string strMrDept, string strRDoctor) {
            this.Invoke("EmrSynchroOnePat", new object[] {
                        strInpNo,
                        strMrDept,
                        strRDoctor});
        }
        
        /// <remarks/>
        public void EmrSynchroOnePatAsync(string strInpNo, string strMrDept, string strRDoctor) {
            this.EmrSynchroOnePatAsync(strInpNo, strMrDept, strRDoctor, null);
        }
        
        /// <remarks/>
        public void EmrSynchroOnePatAsync(string strInpNo, string strMrDept, string strRDoctor, object userState) {
            if ((this.EmrSynchroOnePatOperationCompleted == null)) {
                this.EmrSynchroOnePatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroOnePatOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroOnePat", new object[] {
                        strInpNo,
                        strMrDept,
                        strRDoctor}, this.EmrSynchroOnePatOperationCompleted, userState);
        }
        
        private void OnEmrSynchroOnePatOperationCompleted(object arg) {
            if ((this.EmrSynchroOnePatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroOnePatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroOnePatTest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrSynchroOnePatTest(string strInpNo, string strMrDept, string strRDoctor) {
            object[] results = this.Invoke("EmrSynchroOnePatTest", new object[] {
                        strInpNo,
                        strMrDept,
                        strRDoctor});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrSynchroOnePatTestAsync(string strInpNo, string strMrDept, string strRDoctor) {
            this.EmrSynchroOnePatTestAsync(strInpNo, strMrDept, strRDoctor, null);
        }
        
        /// <remarks/>
        public void EmrSynchroOnePatTestAsync(string strInpNo, string strMrDept, string strRDoctor, object userState) {
            if ((this.EmrSynchroOnePatTestOperationCompleted == null)) {
                this.EmrSynchroOnePatTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroOnePatTestOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroOnePatTest", new object[] {
                        strInpNo,
                        strMrDept,
                        strRDoctor}, this.EmrSynchroOnePatTestOperationCompleted, userState);
        }
        
        private void OnEmrSynchroOnePatTestOperationCompleted(object arg) {
            if ((this.EmrSynchroOnePatTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroOnePatTestCompleted(this, new EmrSynchroOnePatTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroNewPatMZ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroNewPatMZ(string nDeptID, string strCurrentDate) {
            this.Invoke("EmrSynchroNewPatMZ", new object[] {
                        nDeptID,
                        strCurrentDate});
        }
        
        /// <remarks/>
        public void EmrSynchroNewPatMZAsync(string nDeptID, string strCurrentDate) {
            this.EmrSynchroNewPatMZAsync(nDeptID, strCurrentDate, null);
        }
        
        /// <remarks/>
        public void EmrSynchroNewPatMZAsync(string nDeptID, string strCurrentDate, object userState) {
            if ((this.EmrSynchroNewPatMZOperationCompleted == null)) {
                this.EmrSynchroNewPatMZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroNewPatMZOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroNewPatMZ", new object[] {
                        nDeptID,
                        strCurrentDate}, this.EmrSynchroNewPatMZOperationCompleted, userState);
        }
        
        private void OnEmrSynchroNewPatMZOperationCompleted(object arg) {
            if ((this.EmrSynchroNewPatMZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroNewPatMZCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroOutPat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroOutPat(string nDeptID) {
            this.Invoke("EmrSynchroOutPat", new object[] {
                        nDeptID});
        }
        
        /// <remarks/>
        public void EmrSynchroOutPatAsync(string nDeptID) {
            this.EmrSynchroOutPatAsync(nDeptID, null);
        }
        
        /// <remarks/>
        public void EmrSynchroOutPatAsync(string nDeptID, object userState) {
            if ((this.EmrSynchroOutPatOperationCompleted == null)) {
                this.EmrSynchroOutPatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroOutPatOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroOutPat", new object[] {
                        nDeptID}, this.EmrSynchroOutPatOperationCompleted, userState);
        }
        
        private void OnEmrSynchroOutPatOperationCompleted(object arg) {
            if ((this.EmrSynchroOutPatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroOutPatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrBackup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrBackup(int nFlag) {
            this.Invoke("EmrBackup", new object[] {
                        nFlag});
        }
        
        /// <remarks/>
        public void EmrBackupAsync(int nFlag) {
            this.EmrBackupAsync(nFlag, null);
        }
        
        /// <remarks/>
        public void EmrBackupAsync(int nFlag, object userState) {
            if ((this.EmrBackupOperationCompleted == null)) {
                this.EmrBackupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrBackupOperationCompleted);
            }
            this.InvokeAsync("EmrBackup", new object[] {
                        nFlag}, this.EmrBackupOperationCompleted, userState);
        }
        
        private void OnEmrBackupOperationCompleted(object arg) {
            if ((this.EmrBackupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrBackupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateErrorTopicid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateErrorTopicid(string strPatientid, string strVisitId) {
            this.Invoke("UpdateErrorTopicid", new object[] {
                        strPatientid,
                        strVisitId});
        }
        
        /// <remarks/>
        public void UpdateErrorTopicidAsync(string strPatientid, string strVisitId) {
            this.UpdateErrorTopicidAsync(strPatientid, strVisitId, null);
        }
        
        /// <remarks/>
        public void UpdateErrorTopicidAsync(string strPatientid, string strVisitId, object userState) {
            if ((this.UpdateErrorTopicidOperationCompleted == null)) {
                this.UpdateErrorTopicidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateErrorTopicidOperationCompleted);
            }
            this.InvokeAsync("UpdateErrorTopicid", new object[] {
                        strPatientid,
                        strVisitId}, this.UpdateErrorTopicidOperationCompleted, userState);
        }
        
        private void OnUpdateErrorTopicidOperationCompleted(object arg) {
            if ((this.UpdateErrorTopicidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateErrorTopicidCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetOrderTypeDict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetOrderTypeDict() {
            object[] results = this.Invoke("EmrGetOrderTypeDict", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetOrderTypeDictAsync() {
            this.EmrGetOrderTypeDictAsync(null);
        }
        
        /// <remarks/>
        public void EmrGetOrderTypeDictAsync(object userState) {
            if ((this.EmrGetOrderTypeDictOperationCompleted == null)) {
                this.EmrGetOrderTypeDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetOrderTypeDictOperationCompleted);
            }
            this.InvokeAsync("EmrGetOrderTypeDict", new object[0], this.EmrGetOrderTypeDictOperationCompleted, userState);
        }
        
        private void OnEmrGetOrderTypeDictOperationCompleted(object arg) {
            if ((this.EmrGetOrderTypeDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetOrderTypeDictCompleted(this, new EmrGetOrderTypeDictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetOrderItemDict", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetOrderItemDict(string strOrderTypeCode) {
            object[] results = this.Invoke("EmrGetOrderItemDict", new object[] {
                        strOrderTypeCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetOrderItemDictAsync(string strOrderTypeCode) {
            this.EmrGetOrderItemDictAsync(strOrderTypeCode, null);
        }
        
        /// <remarks/>
        public void EmrGetOrderItemDictAsync(string strOrderTypeCode, object userState) {
            if ((this.EmrGetOrderItemDictOperationCompleted == null)) {
                this.EmrGetOrderItemDictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetOrderItemDictOperationCompleted);
            }
            this.InvokeAsync("EmrGetOrderItemDict", new object[] {
                        strOrderTypeCode}, this.EmrGetOrderItemDictOperationCompleted, userState);
        }
        
        private void OnEmrGetOrderItemDictOperationCompleted(object arg) {
            if ((this.EmrGetOrderItemDictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetOrderItemDictCompleted(this, new EmrGetOrderItemDictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetOrderDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetOrderDataSet() {
            object[] results = this.Invoke("EmrGetOrderDataSet", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetOrderDataSetAsync() {
            this.EmrGetOrderDataSetAsync(null);
        }
        
        /// <remarks/>
        public void EmrGetOrderDataSetAsync(object userState) {
            if ((this.EmrGetOrderDataSetOperationCompleted == null)) {
                this.EmrGetOrderDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetOrderDataSetOperationCompleted);
            }
            this.InvokeAsync("EmrGetOrderDataSet", new object[0], this.EmrGetOrderDataSetOperationCompleted, userState);
        }
        
        private void OnEmrGetOrderDataSetOperationCompleted(object arg) {
            if ((this.EmrGetOrderDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetOrderDataSetCompleted(this, new EmrGetOrderDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroPatOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroPatOrder(string strPatientId, int nVisitId) {
            this.Invoke("EmrSynchroPatOrder", new object[] {
                        strPatientId,
                        nVisitId});
        }
        
        /// <remarks/>
        public void EmrSynchroPatOrderAsync(string strPatientId, int nVisitId) {
            this.EmrSynchroPatOrderAsync(strPatientId, nVisitId, null);
        }
        
        /// <remarks/>
        public void EmrSynchroPatOrderAsync(string strPatientId, int nVisitId, object userState) {
            if ((this.EmrSynchroPatOrderOperationCompleted == null)) {
                this.EmrSynchroPatOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroPatOrderOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroPatOrder", new object[] {
                        strPatientId,
                        nVisitId}, this.EmrSynchroPatOrderOperationCompleted, userState);
        }
        
        private void OnEmrSynchroPatOrderOperationCompleted(object arg) {
            if ((this.EmrSynchroPatOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroPatOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetOrderDataSetByPatentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetOrderDataSetByPatentID(string strPatientID, int intVisitID) {
            object[] results = this.Invoke("EmrGetOrderDataSetByPatentID", new object[] {
                        strPatientID,
                        intVisitID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetOrderDataSetByPatentIDAsync(string strPatientID, int intVisitID) {
            this.EmrGetOrderDataSetByPatentIDAsync(strPatientID, intVisitID, null);
        }
        
        /// <remarks/>
        public void EmrGetOrderDataSetByPatentIDAsync(string strPatientID, int intVisitID, object userState) {
            if ((this.EmrGetOrderDataSetByPatentIDOperationCompleted == null)) {
                this.EmrGetOrderDataSetByPatentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetOrderDataSetByPatentIDOperationCompleted);
            }
            this.InvokeAsync("EmrGetOrderDataSetByPatentID", new object[] {
                        strPatientID,
                        intVisitID}, this.EmrGetOrderDataSetByPatentIDOperationCompleted, userState);
        }
        
        private void OnEmrGetOrderDataSetByPatentIDOperationCompleted(object arg) {
            if ((this.EmrGetOrderDataSetByPatentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetOrderDataSetByPatentIDCompleted(this, new EmrGetOrderDataSetByPatentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetLabDataSetByPatentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetLabDataSetByPatentID(string strPatientID, int intVisitID) {
            object[] results = this.Invoke("EmrGetLabDataSetByPatentID", new object[] {
                        strPatientID,
                        intVisitID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetLabDataSetByPatentIDAsync(string strPatientID, int intVisitID) {
            this.EmrGetLabDataSetByPatentIDAsync(strPatientID, intVisitID, null);
        }
        
        /// <remarks/>
        public void EmrGetLabDataSetByPatentIDAsync(string strPatientID, int intVisitID, object userState) {
            if ((this.EmrGetLabDataSetByPatentIDOperationCompleted == null)) {
                this.EmrGetLabDataSetByPatentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetLabDataSetByPatentIDOperationCompleted);
            }
            this.InvokeAsync("EmrGetLabDataSetByPatentID", new object[] {
                        strPatientID,
                        intVisitID}, this.EmrGetLabDataSetByPatentIDOperationCompleted, userState);
        }
        
        private void OnEmrGetLabDataSetByPatentIDOperationCompleted(object arg) {
            if ((this.EmrGetLabDataSetByPatentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetLabDataSetByPatentIDCompleted(this, new EmrGetLabDataSetByPatentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetLabReportDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetLabReportDataSet(string strTestNO) {
            object[] results = this.Invoke("EmrGetLabReportDataSet", new object[] {
                        strTestNO});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetLabReportDataSetAsync(string strTestNO) {
            this.EmrGetLabReportDataSetAsync(strTestNO, null);
        }
        
        /// <remarks/>
        public void EmrGetLabReportDataSetAsync(string strTestNO, object userState) {
            if ((this.EmrGetLabReportDataSetOperationCompleted == null)) {
                this.EmrGetLabReportDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetLabReportDataSetOperationCompleted);
            }
            this.InvokeAsync("EmrGetLabReportDataSet", new object[] {
                        strTestNO}, this.EmrGetLabReportDataSetOperationCompleted, userState);
        }
        
        private void OnEmrGetLabReportDataSetOperationCompleted(object arg) {
            if ((this.EmrGetLabReportDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetLabReportDataSetCompleted(this, new EmrGetLabReportDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetLabItemResultQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetLabItemResultQuery(string strPatientID, int intVisitID, string strReportItem) {
            object[] results = this.Invoke("EmrGetLabItemResultQuery", new object[] {
                        strPatientID,
                        intVisitID,
                        strReportItem});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetLabItemResultQueryAsync(string strPatientID, int intVisitID, string strReportItem) {
            this.EmrGetLabItemResultQueryAsync(strPatientID, intVisitID, strReportItem, null);
        }
        
        /// <remarks/>
        public void EmrGetLabItemResultQueryAsync(string strPatientID, int intVisitID, string strReportItem, object userState) {
            if ((this.EmrGetLabItemResultQueryOperationCompleted == null)) {
                this.EmrGetLabItemResultQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetLabItemResultQueryOperationCompleted);
            }
            this.InvokeAsync("EmrGetLabItemResultQuery", new object[] {
                        strPatientID,
                        intVisitID,
                        strReportItem}, this.EmrGetLabItemResultQueryOperationCompleted, userState);
        }
        
        private void OnEmrGetLabItemResultQueryOperationCompleted(object arg) {
            if ((this.EmrGetLabItemResultQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetLabItemResultQueryCompleted(this, new EmrGetLabItemResultQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetExamMaster", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetExamMaster(string strPatientID, int intVisitID) {
            object[] results = this.Invoke("EmrGetExamMaster", new object[] {
                        strPatientID,
                        intVisitID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetExamMasterAsync(string strPatientID, int intVisitID) {
            this.EmrGetExamMasterAsync(strPatientID, intVisitID, null);
        }
        
        /// <remarks/>
        public void EmrGetExamMasterAsync(string strPatientID, int intVisitID, object userState) {
            if ((this.EmrGetExamMasterOperationCompleted == null)) {
                this.EmrGetExamMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetExamMasterOperationCompleted);
            }
            this.InvokeAsync("EmrGetExamMaster", new object[] {
                        strPatientID,
                        intVisitID}, this.EmrGetExamMasterOperationCompleted, userState);
        }
        
        private void OnEmrGetExamMasterOperationCompleted(object arg) {
            if ((this.EmrGetExamMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetExamMasterCompleted(this, new EmrGetExamMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetExamAppoint", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetExamAppoint(string strPatientID, int intVisitID) {
            object[] results = this.Invoke("EmrGetExamAppoint", new object[] {
                        strPatientID,
                        intVisitID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetExamAppointAsync(string strPatientID, int intVisitID) {
            this.EmrGetExamAppointAsync(strPatientID, intVisitID, null);
        }
        
        /// <remarks/>
        public void EmrGetExamAppointAsync(string strPatientID, int intVisitID, object userState) {
            if ((this.EmrGetExamAppointOperationCompleted == null)) {
                this.EmrGetExamAppointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetExamAppointOperationCompleted);
            }
            this.InvokeAsync("EmrGetExamAppoint", new object[] {
                        strPatientID,
                        intVisitID}, this.EmrGetExamAppointOperationCompleted, userState);
        }
        
        private void OnEmrGetExamAppointOperationCompleted(object arg) {
            if ((this.EmrGetExamAppointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetExamAppointCompleted(this, new EmrGetExamAppointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroExamAppoint", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroExamAppoint() {
            this.Invoke("EmrSynchroExamAppoint", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroExamAppointAsync() {
            this.EmrSynchroExamAppointAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroExamAppointAsync(object userState) {
            if ((this.EmrSynchroExamAppointOperationCompleted == null)) {
                this.EmrSynchroExamAppointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroExamAppointOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroExamAppoint", new object[0], this.EmrSynchroExamAppointOperationCompleted, userState);
        }
        
        private void OnEmrSynchroExamAppointOperationCompleted(object arg) {
            if ((this.EmrSynchroExamAppointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroExamAppointCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetExamReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetExamReport(string strExamNO) {
            object[] results = this.Invoke("EmrGetExamReport", new object[] {
                        strExamNO});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetExamReportAsync(string strExamNO) {
            this.EmrGetExamReportAsync(strExamNO, null);
        }
        
        /// <remarks/>
        public void EmrGetExamReportAsync(string strExamNO, object userState) {
            if ((this.EmrGetExamReportOperationCompleted == null)) {
                this.EmrGetExamReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetExamReportOperationCompleted);
            }
            this.InvokeAsync("EmrGetExamReport", new object[] {
                        strExamNO}, this.EmrGetExamReportOperationCompleted, userState);
        }
        
        private void OnEmrGetExamReportOperationCompleted(object arg) {
            if ((this.EmrGetExamReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetExamReportCompleted(this, new EmrGetExamReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroDeptPatOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroDeptPatOrder(string nDeptID) {
            this.Invoke("EmrSynchroDeptPatOrder", new object[] {
                        nDeptID});
        }
        
        /// <remarks/>
        public void EmrSynchroDeptPatOrderAsync(string nDeptID) {
            this.EmrSynchroDeptPatOrderAsync(nDeptID, null);
        }
        
        /// <remarks/>
        public void EmrSynchroDeptPatOrderAsync(string nDeptID, object userState) {
            if ((this.EmrSynchroDeptPatOrderOperationCompleted == null)) {
                this.EmrSynchroDeptPatOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroDeptPatOrderOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroDeptPatOrder", new object[] {
                        nDeptID}, this.EmrSynchroDeptPatOrderOperationCompleted, userState);
        }
        
        private void OnEmrSynchroDeptPatOrderOperationCompleted(object arg) {
            if ((this.EmrSynchroDeptPatOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroDeptPatOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroAppGrants", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroAppGrants() {
            this.Invoke("EmrSynchroAppGrants", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroAppGrantsAsync() {
            this.EmrSynchroAppGrantsAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroAppGrantsAsync(object userState) {
            if ((this.EmrSynchroAppGrantsOperationCompleted == null)) {
                this.EmrSynchroAppGrantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroAppGrantsOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroAppGrants", new object[0], this.EmrSynchroAppGrantsOperationCompleted, userState);
        }
        
        private void OnEmrSynchroAppGrantsOperationCompleted(object arg) {
            if ((this.EmrSynchroAppGrantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroAppGrantsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroPatMedicalCostById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroPatMedicalCostById(string strPatientId, int nVisitId) {
            this.Invoke("EmrSynchroPatMedicalCostById", new object[] {
                        strPatientId,
                        nVisitId});
        }
        
        /// <remarks/>
        public void EmrSynchroPatMedicalCostByIdAsync(string strPatientId, int nVisitId) {
            this.EmrSynchroPatMedicalCostByIdAsync(strPatientId, nVisitId, null);
        }
        
        /// <remarks/>
        public void EmrSynchroPatMedicalCostByIdAsync(string strPatientId, int nVisitId, object userState) {
            if ((this.EmrSynchroPatMedicalCostByIdOperationCompleted == null)) {
                this.EmrSynchroPatMedicalCostByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroPatMedicalCostByIdOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroPatMedicalCostById", new object[] {
                        strPatientId,
                        nVisitId}, this.EmrSynchroPatMedicalCostByIdOperationCompleted, userState);
        }
        
        private void OnEmrSynchroPatMedicalCostByIdOperationCompleted(object arg) {
            if ((this.EmrSynchroPatMedicalCostByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroPatMedicalCostByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroLis", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroLis() {
            this.Invoke("EmrSynchroLis", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroLisAsync() {
            this.EmrSynchroLisAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroLisAsync(object userState) {
            if ((this.EmrSynchroLisOperationCompleted == null)) {
                this.EmrSynchroLisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroLisOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroLis", new object[0], this.EmrSynchroLisOperationCompleted, userState);
        }
        
        private void OnEmrSynchroLisOperationCompleted(object arg) {
            if ((this.EmrSynchroLisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroLisCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSychroAdtLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSychroAdtLog() {
            this.Invoke("EmrSychroAdtLog", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSychroAdtLogAsync() {
            this.EmrSychroAdtLogAsync(null);
        }
        
        /// <remarks/>
        public void EmrSychroAdtLogAsync(object userState) {
            if ((this.EmrSychroAdtLogOperationCompleted == null)) {
                this.EmrSychroAdtLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSychroAdtLogOperationCompleted);
            }
            this.InvokeAsync("EmrSychroAdtLog", new object[0], this.EmrSychroAdtLogOperationCompleted, userState);
        }
        
        private void OnEmrSychroAdtLogOperationCompleted(object arg) {
            if ((this.EmrSychroAdtLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSychroAdtLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEmrReportBedDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateEmrReportBedDate(string strDate) {
            this.Invoke("UpdateEmrReportBedDate", new object[] {
                        strDate});
        }
        
        /// <remarks/>
        public void UpdateEmrReportBedDateAsync(string strDate) {
            this.UpdateEmrReportBedDateAsync(strDate, null);
        }
        
        /// <remarks/>
        public void UpdateEmrReportBedDateAsync(string strDate, object userState) {
            if ((this.UpdateEmrReportBedDateOperationCompleted == null)) {
                this.UpdateEmrReportBedDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmrReportBedDateOperationCompleted);
            }
            this.InvokeAsync("UpdateEmrReportBedDate", new object[] {
                        strDate}, this.UpdateEmrReportBedDateOperationCompleted, userState);
        }
        
        private void OnUpdateEmrReportBedDateOperationCompleted(object arg) {
            if ((this.UpdateEmrReportBedDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmrReportBedDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetHisQNRYRS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int EmrGetHisQNRYRS(string nDeptId, string strStartDate, string strEndDate) {
            object[] results = this.Invoke("EmrGetHisQNRYRS", new object[] {
                        nDeptId,
                        strStartDate,
                        strEndDate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetHisQNRYRSAsync(string nDeptId, string strStartDate, string strEndDate) {
            this.EmrGetHisQNRYRSAsync(nDeptId, strStartDate, strEndDate, null);
        }
        
        /// <remarks/>
        public void EmrGetHisQNRYRSAsync(string nDeptId, string strStartDate, string strEndDate, object userState) {
            if ((this.EmrGetHisQNRYRSOperationCompleted == null)) {
                this.EmrGetHisQNRYRSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetHisQNRYRSOperationCompleted);
            }
            this.InvokeAsync("EmrGetHisQNRYRS", new object[] {
                        nDeptId,
                        strStartDate,
                        strEndDate}, this.EmrGetHisQNRYRSOperationCompleted, userState);
        }
        
        private void OnEmrGetHisQNRYRSOperationCompleted(object arg) {
            if ((this.EmrGetHisQNRYRSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetHisQNRYRSCompleted(this, new EmrGetHisQNRYRSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetHisQNCYRS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int EmrGetHisQNCYRS(string nDeptId, string strStartDate, string strEndDate) {
            object[] results = this.Invoke("EmrGetHisQNCYRS", new object[] {
                        nDeptId,
                        strStartDate,
                        strEndDate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetHisQNCYRSAsync(string nDeptId, string strStartDate, string strEndDate) {
            this.EmrGetHisQNCYRSAsync(nDeptId, strStartDate, strEndDate, null);
        }
        
        /// <remarks/>
        public void EmrGetHisQNCYRSAsync(string nDeptId, string strStartDate, string strEndDate, object userState) {
            if ((this.EmrGetHisQNCYRSOperationCompleted == null)) {
                this.EmrGetHisQNCYRSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetHisQNCYRSOperationCompleted);
            }
            this.InvokeAsync("EmrGetHisQNCYRS", new object[] {
                        nDeptId,
                        strStartDate,
                        strEndDate}, this.EmrGetHisQNCYRSOperationCompleted, userState);
        }
        
        private void OnEmrGetHisQNCYRSOperationCompleted(object arg) {
            if ((this.EmrGetHisQNCYRSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetHisQNCYRSCompleted(this, new EmrGetHisQNCYRSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetHisQWYYRS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int EmrGetHisQWYYRS(string nDeptId, string strStartDate, string strEndDate) {
            object[] results = this.Invoke("EmrGetHisQWYYRS", new object[] {
                        nDeptId,
                        strStartDate,
                        strEndDate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetHisQWYYRSAsync(string nDeptId, string strStartDate, string strEndDate) {
            this.EmrGetHisQWYYRSAsync(nDeptId, strStartDate, strEndDate, null);
        }
        
        /// <remarks/>
        public void EmrGetHisQWYYRSAsync(string nDeptId, string strStartDate, string strEndDate, object userState) {
            if ((this.EmrGetHisQWYYRSOperationCompleted == null)) {
                this.EmrGetHisQWYYRSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetHisQWYYRSOperationCompleted);
            }
            this.InvokeAsync("EmrGetHisQWYYRS", new object[] {
                        nDeptId,
                        strStartDate,
                        strEndDate}, this.EmrGetHisQWYYRSOperationCompleted, userState);
        }
        
        private void OnEmrGetHisQWYYRSOperationCompleted(object arg) {
            if ((this.EmrGetHisQWYYRSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetHisQWYYRSCompleted(this, new EmrGetHisQWYYRSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetHisQMSYRS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int EmrGetHisQMSYRS(string nDeptId, string strStartDate, string strEndDate) {
            object[] results = this.Invoke("EmrGetHisQMSYRS", new object[] {
                        nDeptId,
                        strStartDate,
                        strEndDate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetHisQMSYRSAsync(string nDeptId, string strStartDate, string strEndDate) {
            this.EmrGetHisQMSYRSAsync(nDeptId, strStartDate, strEndDate, null);
        }
        
        /// <remarks/>
        public void EmrGetHisQMSYRSAsync(string nDeptId, string strStartDate, string strEndDate, object userState) {
            if ((this.EmrGetHisQMSYRSOperationCompleted == null)) {
                this.EmrGetHisQMSYRSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetHisQMSYRSOperationCompleted);
            }
            this.InvokeAsync("EmrGetHisQMSYRS", new object[] {
                        nDeptId,
                        strStartDate,
                        strEndDate}, this.EmrGetHisQMSYRSOperationCompleted, userState);
        }
        
        private void OnEmrGetHisQMSYRSOperationCompleted(object arg) {
            if ((this.EmrGetHisQMSYRSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetHisQMSYRSCompleted(this, new EmrGetHisQMSYRSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetPatDischargeDateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrGetPatDischargeDateTime(string strPatientId, int nVisitId) {
            object[] results = this.Invoke("EmrGetPatDischargeDateTime", new object[] {
                        strPatientId,
                        nVisitId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetPatDischargeDateTimeAsync(string strPatientId, int nVisitId) {
            this.EmrGetPatDischargeDateTimeAsync(strPatientId, nVisitId, null);
        }
        
        /// <remarks/>
        public void EmrGetPatDischargeDateTimeAsync(string strPatientId, int nVisitId, object userState) {
            if ((this.EmrGetPatDischargeDateTimeOperationCompleted == null)) {
                this.EmrGetPatDischargeDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetPatDischargeDateTimeOperationCompleted);
            }
            this.InvokeAsync("EmrGetPatDischargeDateTime", new object[] {
                        strPatientId,
                        nVisitId}, this.EmrGetPatDischargeDateTimeOperationCompleted, userState);
        }
        
        private void OnEmrGetPatDischargeDateTimeOperationCompleted(object arg) {
            if ((this.EmrGetPatDischargeDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetPatDischargeDateTimeCompleted(this, new EmrGetPatDischargeDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEmrReportBedDateICU", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateEmrReportBedDateICU(string strDate) {
            this.Invoke("UpdateEmrReportBedDateICU", new object[] {
                        strDate});
        }
        
        /// <remarks/>
        public void UpdateEmrReportBedDateICUAsync(string strDate) {
            this.UpdateEmrReportBedDateICUAsync(strDate, null);
        }
        
        /// <remarks/>
        public void UpdateEmrReportBedDateICUAsync(string strDate, object userState) {
            if ((this.UpdateEmrReportBedDateICUOperationCompleted == null)) {
                this.UpdateEmrReportBedDateICUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmrReportBedDateICUOperationCompleted);
            }
            this.InvokeAsync("UpdateEmrReportBedDateICU", new object[] {
                        strDate}, this.UpdateEmrReportBedDateICUOperationCompleted, userState);
        }
        
        private void OnUpdateEmrReportBedDateICUOperationCompleted(object arg) {
            if ((this.UpdateEmrReportBedDateICUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmrReportBedDateICUCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSynchroDischargeDateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrSynchroDischargeDateTime() {
            this.Invoke("EmrSynchroDischargeDateTime", new object[0]);
        }
        
        /// <remarks/>
        public void EmrSynchroDischargeDateTimeAsync() {
            this.EmrSynchroDischargeDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void EmrSynchroDischargeDateTimeAsync(object userState) {
            if ((this.EmrSynchroDischargeDateTimeOperationCompleted == null)) {
                this.EmrSynchroDischargeDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSynchroDischargeDateTimeOperationCompleted);
            }
            this.InvokeAsync("EmrSynchroDischargeDateTime", new object[0], this.EmrSynchroDischargeDateTimeOperationCompleted, userState);
        }
        
        private void OnEmrSynchroDischargeDateTimeOperationCompleted(object arg) {
            if ((this.EmrSynchroDischargeDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSynchroDischargeDateTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetEncodingPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrGetEncodingPassword(string strUserID, string strUSERPWD) {
            object[] results = this.Invoke("EmrGetEncodingPassword", new object[] {
                        strUserID,
                        strUSERPWD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetEncodingPasswordAsync(string strUserID, string strUSERPWD) {
            this.EmrGetEncodingPasswordAsync(strUserID, strUSERPWD, null);
        }
        
        /// <remarks/>
        public void EmrGetEncodingPasswordAsync(string strUserID, string strUSERPWD, object userState) {
            if ((this.EmrGetEncodingPasswordOperationCompleted == null)) {
                this.EmrGetEncodingPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetEncodingPasswordOperationCompleted);
            }
            this.InvokeAsync("EmrGetEncodingPassword", new object[] {
                        strUserID,
                        strUSERPWD}, this.EmrGetEncodingPasswordOperationCompleted, userState);
        }
        
        private void OnEmrGetEncodingPasswordOperationCompleted(object arg) {
            if ((this.EmrGetEncodingPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetEncodingPasswordCompleted(this, new EmrGetEncodingPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrToHis", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmrToHis(string strPatientID, string strVisitID, string strFlag) {
            this.Invoke("EmrToHis", new object[] {
                        strPatientID,
                        strVisitID,
                        strFlag});
        }
        
        /// <remarks/>
        public void EmrToHisAsync(string strPatientID, string strVisitID, string strFlag) {
            this.EmrToHisAsync(strPatientID, strVisitID, strFlag, null);
        }
        
        /// <remarks/>
        public void EmrToHisAsync(string strPatientID, string strVisitID, string strFlag, object userState) {
            if ((this.EmrToHisOperationCompleted == null)) {
                this.EmrToHisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrToHisOperationCompleted);
            }
            this.InvokeAsync("EmrToHis", new object[] {
                        strPatientID,
                        strVisitID,
                        strFlag}, this.EmrToHisOperationCompleted, userState);
        }
        
        private void OnEmrToHisOperationCompleted(object arg) {
            if ((this.EmrToHisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrToHisCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/XinXiDaoRuHis", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void XinXiDaoRuHis(System.DateTime starttime, System.DateTime endtime) {
            this.Invoke("XinXiDaoRuHis", new object[] {
                        starttime,
                        endtime});
        }
        
        /// <remarks/>
        public void XinXiDaoRuHisAsync(System.DateTime starttime, System.DateTime endtime) {
            this.XinXiDaoRuHisAsync(starttime, endtime, null);
        }
        
        /// <remarks/>
        public void XinXiDaoRuHisAsync(System.DateTime starttime, System.DateTime endtime, object userState) {
            if ((this.XinXiDaoRuHisOperationCompleted == null)) {
                this.XinXiDaoRuHisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXinXiDaoRuHisOperationCompleted);
            }
            this.InvokeAsync("XinXiDaoRuHis", new object[] {
                        starttime,
                        endtime}, this.XinXiDaoRuHisOperationCompleted, userState);
        }
        
        private void OnXinXiDaoRuHisOperationCompleted(object arg) {
            if ((this.XinXiDaoRuHisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XinXiDaoRuHisCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetGeneralSQL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetGeneralSQL(string strSQL, string strType) {
            object[] results = this.Invoke("EmrGetGeneralSQL", new object[] {
                        strSQL,
                        strType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetGeneralSQLAsync(string strSQL, string strType) {
            this.EmrGetGeneralSQLAsync(strSQL, strType, null);
        }
        
        /// <remarks/>
        public void EmrGetGeneralSQLAsync(string strSQL, string strType, object userState) {
            if ((this.EmrGetGeneralSQLOperationCompleted == null)) {
                this.EmrGetGeneralSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetGeneralSQLOperationCompleted);
            }
            this.InvokeAsync("EmrGetGeneralSQL", new object[] {
                        strSQL,
                        strType}, this.EmrGetGeneralSQLOperationCompleted, userState);
        }
        
        private void OnEmrGetGeneralSQLOperationCompleted(object arg) {
            if ((this.EmrGetGeneralSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetGeneralSQLCompleted(this, new EmrGetGeneralSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Getdataset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Getdataset(string obj) {
            object[] results = this.Invoke("Getdataset", new object[] {
                        obj});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetdatasetAsync(string obj) {
            this.GetdatasetAsync(obj, null);
        }
        
        /// <remarks/>
        public void GetdatasetAsync(string obj, object userState) {
            if ((this.GetdatasetOperationCompleted == null)) {
                this.GetdatasetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetdatasetOperationCompleted);
            }
            this.InvokeAsync("Getdataset", new object[] {
                        obj}, this.GetdatasetOperationCompleted, userState);
        }
        
        private void OnGetdatasetOperationCompleted(object arg) {
            if ((this.GetdatasetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetdatasetCompleted(this, new GetdatasetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGenralDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGenralDataSet(object[] list) {
            object[] results = this.Invoke("EmrGenralDataSet", new object[] {
                        list});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGenralDataSetAsync(object[] list) {
            this.EmrGenralDataSetAsync(list, null);
        }
        
        /// <remarks/>
        public void EmrGenralDataSetAsync(object[] list, object userState) {
            if ((this.EmrGenralDataSetOperationCompleted == null)) {
                this.EmrGenralDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGenralDataSetOperationCompleted);
            }
            this.InvokeAsync("EmrGenralDataSet", new object[] {
                        list}, this.EmrGenralDataSetOperationCompleted, userState);
        }
        
        private void OnEmrGenralDataSetOperationCompleted(object arg) {
            if ((this.EmrGenralDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGenralDataSetCompleted(this, new EmrGenralDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetTransferInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetTransferInfo(string patient_id, int visit_id, string trans_numbers) {
            object[] results = this.Invoke("EmrGetTransferInfo", new object[] {
                        patient_id,
                        visit_id,
                        trans_numbers});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetTransferInfoAsync(string patient_id, int visit_id, string trans_numbers) {
            this.EmrGetTransferInfoAsync(patient_id, visit_id, trans_numbers, null);
        }
        
        /// <remarks/>
        public void EmrGetTransferInfoAsync(string patient_id, int visit_id, string trans_numbers, object userState) {
            if ((this.EmrGetTransferInfoOperationCompleted == null)) {
                this.EmrGetTransferInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetTransferInfoOperationCompleted);
            }
            this.InvokeAsync("EmrGetTransferInfo", new object[] {
                        patient_id,
                        visit_id,
                        trans_numbers}, this.EmrGetTransferInfoOperationCompleted, userState);
        }
        
        private void OnEmrGetTransferInfoOperationCompleted(object arg) {
            if ((this.EmrGetTransferInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetTransferInfoCompleted(this, new EmrGetTransferInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AAAEmrGenralStr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AAAEmrGenralStr(string a, string b, string c) {
            object[] results = this.Invoke("AAAEmrGenralStr", new object[] {
                        a,
                        b,
                        c});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AAAEmrGenralStrAsync(string a, string b, string c) {
            this.AAAEmrGenralStrAsync(a, b, c, null);
        }
        
        /// <remarks/>
        public void AAAEmrGenralStrAsync(string a, string b, string c, object userState) {
            if ((this.AAAEmrGenralStrOperationCompleted == null)) {
                this.AAAEmrGenralStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAAAEmrGenralStrOperationCompleted);
            }
            this.InvokeAsync("AAAEmrGenralStr", new object[] {
                        a,
                        b,
                        c}, this.AAAEmrGenralStrOperationCompleted, userState);
        }
        
        private void OnAAAEmrGenralStrOperationCompleted(object arg) {
            if ((this.AAAEmrGenralStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AAAEmrGenralStrCompleted(this, new AAAEmrGenralStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGenralStr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrGenralStr(object[] list) {
            object[] results = this.Invoke("EmrGenralStr", new object[] {
                        list});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGenralStrAsync(object[] list) {
            this.EmrGenralStrAsync(list, null);
        }
        
        /// <remarks/>
        public void EmrGenralStrAsync(object[] list, object userState) {
            if ((this.EmrGenralStrOperationCompleted == null)) {
                this.EmrGenralStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGenralStrOperationCompleted);
            }
            this.InvokeAsync("EmrGenralStr", new object[] {
                        list}, this.EmrGenralStrOperationCompleted, userState);
        }
        
        private void OnEmrGenralStrOperationCompleted(object arg) {
            if ((this.EmrGenralStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGenralStrCompleted(this, new EmrGenralStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetMonitorCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrGetMonitorCode(string patient_id, int visit_id) {
            object[] results = this.Invoke("EmrGetMonitorCode", new object[] {
                        patient_id,
                        visit_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetMonitorCodeAsync(string patient_id, int visit_id) {
            this.EmrGetMonitorCodeAsync(patient_id, visit_id, null);
        }
        
        /// <remarks/>
        public void EmrGetMonitorCodeAsync(string patient_id, int visit_id, object userState) {
            if ((this.EmrGetMonitorCodeOperationCompleted == null)) {
                this.EmrGetMonitorCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetMonitorCodeOperationCompleted);
            }
            this.InvokeAsync("EmrGetMonitorCode", new object[] {
                        patient_id,
                        visit_id}, this.EmrGetMonitorCodeOperationCompleted, userState);
        }
        
        private void OnEmrGetMonitorCodeOperationCompleted(object arg) {
            if ((this.EmrGetMonitorCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetMonitorCodeCompleted(this, new EmrGetMonitorCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetAutoDis", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrGetAutoDis(string patient_id, int visit_id) {
            object[] results = this.Invoke("EmrGetAutoDis", new object[] {
                        patient_id,
                        visit_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetAutoDisAsync(string patient_id, int visit_id) {
            this.EmrGetAutoDisAsync(patient_id, visit_id, null);
        }
        
        /// <remarks/>
        public void EmrGetAutoDisAsync(string patient_id, int visit_id, object userState) {
            if ((this.EmrGetAutoDisOperationCompleted == null)) {
                this.EmrGetAutoDisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetAutoDisOperationCompleted);
            }
            this.InvokeAsync("EmrGetAutoDis", new object[] {
                        patient_id,
                        visit_id}, this.EmrGetAutoDisOperationCompleted, userState);
        }
        
        private void OnEmrGetAutoDisOperationCompleted(object arg) {
            if ((this.EmrGetAutoDisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetAutoDisCompleted(this, new EmrGetAutoDisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSetHisEncodingPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrSetHisEncodingPassword(string strUSERPWD) {
            object[] results = this.Invoke("EmrSetHisEncodingPassword", new object[] {
                        strUSERPWD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrSetHisEncodingPasswordAsync(string strUSERPWD) {
            this.EmrSetHisEncodingPasswordAsync(strUSERPWD, null);
        }
        
        /// <remarks/>
        public void EmrSetHisEncodingPasswordAsync(string strUSERPWD, object userState) {
            if ((this.EmrSetHisEncodingPasswordOperationCompleted == null)) {
                this.EmrSetHisEncodingPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSetHisEncodingPasswordOperationCompleted);
            }
            this.InvokeAsync("EmrSetHisEncodingPassword", new object[] {
                        strUSERPWD}, this.EmrSetHisEncodingPasswordOperationCompleted, userState);
        }
        
        private void OnEmrSetHisEncodingPasswordOperationCompleted(object arg) {
            if ((this.EmrSetHisEncodingPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSetHisEncodingPasswordCompleted(this, new EmrSetHisEncodingPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrGetHISCosts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EmrGetHISCosts(string strPatientID, string strVisitID) {
            object[] results = this.Invoke("EmrGetHISCosts", new object[] {
                        strPatientID,
                        strVisitID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EmrGetHISCostsAsync(string strPatientID, string strVisitID) {
            this.EmrGetHISCostsAsync(strPatientID, strVisitID, null);
        }
        
        /// <remarks/>
        public void EmrGetHISCostsAsync(string strPatientID, string strVisitID, object userState) {
            if ((this.EmrGetHISCostsOperationCompleted == null)) {
                this.EmrGetHISCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrGetHISCostsOperationCompleted);
            }
            this.InvokeAsync("EmrGetHISCosts", new object[] {
                        strPatientID,
                        strVisitID}, this.EmrGetHISCostsOperationCompleted, userState);
        }
        
        private void OnEmrGetHISCostsOperationCompleted(object arg) {
            if ((this.EmrGetHISCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrGetHISCostsCompleted(this, new EmrGetHISCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrSychroBasicPatInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrSychroBasicPatInfo(string strPatientId, string strVisitId) {
            object[] results = this.Invoke("EmrSychroBasicPatInfo", new object[] {
                        strPatientId,
                        strVisitId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrSychroBasicPatInfoAsync(string strPatientId, string strVisitId) {
            this.EmrSychroBasicPatInfoAsync(strPatientId, strVisitId, null);
        }
        
        /// <remarks/>
        public void EmrSychroBasicPatInfoAsync(string strPatientId, string strVisitId, object userState) {
            if ((this.EmrSychroBasicPatInfoOperationCompleted == null)) {
                this.EmrSychroBasicPatInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrSychroBasicPatInfoOperationCompleted);
            }
            this.InvokeAsync("EmrSychroBasicPatInfo", new object[] {
                        strPatientId,
                        strVisitId}, this.EmrSychroBasicPatInfoOperationCompleted, userState);
        }
        
        private void OnEmrSychroBasicPatInfoOperationCompleted(object arg) {
            if ((this.EmrSychroBasicPatInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrSychroBasicPatInfoCompleted(this, new EmrSychroBasicPatInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrFollowup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrFollowup(string sPatId, string sVisitId) {
            object[] results = this.Invoke("EmrFollowup", new object[] {
                        sPatId,
                        sVisitId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrFollowupAsync(string sPatId, string sVisitId) {
            this.EmrFollowupAsync(sPatId, sVisitId, null);
        }
        
        /// <remarks/>
        public void EmrFollowupAsync(string sPatId, string sVisitId, object userState) {
            if ((this.EmrFollowupOperationCompleted == null)) {
                this.EmrFollowupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrFollowupOperationCompleted);
            }
            this.InvokeAsync("EmrFollowup", new object[] {
                        sPatId,
                        sVisitId}, this.EmrFollowupOperationCompleted, userState);
        }
        
        private void OnEmrFollowupOperationCompleted(object arg) {
            if ((this.EmrFollowupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrFollowupCompleted(this, new EmrFollowupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HISGETINFO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HISGETINFO(string strPatientID, string strVisitID, string strFlag) {
            object[] results = this.Invoke("HISGETINFO", new object[] {
                        strPatientID,
                        strVisitID,
                        strFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HISGETINFOAsync(string strPatientID, string strVisitID, string strFlag) {
            this.HISGETINFOAsync(strPatientID, strVisitID, strFlag, null);
        }
        
        /// <remarks/>
        public void HISGETINFOAsync(string strPatientID, string strVisitID, string strFlag, object userState) {
            if ((this.HISGETINFOOperationCompleted == null)) {
                this.HISGETINFOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHISGETINFOOperationCompleted);
            }
            this.InvokeAsync("HISGETINFO", new object[] {
                        strPatientID,
                        strVisitID,
                        strFlag}, this.HISGETINFOOperationCompleted, userState);
        }
        
        private void OnHISGETINFOOperationCompleted(object arg) {
            if ((this.HISGETINFOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HISGETINFOCompleted(this, new HISGETINFOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDBDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDBDataSet(string DBType, string cmdtxt) {
            object[] results = this.Invoke("GetDBDataSet", new object[] {
                        DBType,
                        cmdtxt});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDBDataSetAsync(string DBType, string cmdtxt) {
            this.GetDBDataSetAsync(DBType, cmdtxt, null);
        }
        
        /// <remarks/>
        public void GetDBDataSetAsync(string DBType, string cmdtxt, object userState) {
            if ((this.GetDBDataSetOperationCompleted == null)) {
                this.GetDBDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDBDataSetOperationCompleted);
            }
            this.InvokeAsync("GetDBDataSet", new object[] {
                        DBType,
                        cmdtxt}, this.GetDBDataSetOperationCompleted, userState);
        }
        
        private void OnGetDBDataSetOperationCompleted(object arg) {
            if ((this.GetDBDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDBDataSetCompleted(this, new GetDBDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteDBSql", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExcuteDBSql(string DBType, string cmdtxt) {
            object[] results = this.Invoke("ExcuteDBSql", new object[] {
                        DBType,
                        cmdtxt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteDBSqlAsync(string DBType, string cmdtxt) {
            this.ExcuteDBSqlAsync(DBType, cmdtxt, null);
        }
        
        /// <remarks/>
        public void ExcuteDBSqlAsync(string DBType, string cmdtxt, object userState) {
            if ((this.ExcuteDBSqlOperationCompleted == null)) {
                this.ExcuteDBSqlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteDBSqlOperationCompleted);
            }
            this.InvokeAsync("ExcuteDBSql", new object[] {
                        DBType,
                        cmdtxt}, this.ExcuteDBSqlOperationCompleted, userState);
        }
        
        private void OnExcuteDBSqlOperationCompleted(object arg) {
            if ((this.ExcuteDBSqlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteDBSqlCompleted(this, new ExcuteDBSqlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmrJHEMRGetEmrWebViewPara", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EmrJHEMRGetEmrWebViewPara(string strLoginName, string strLoginPwd, string strPatID, string strVisitID, string strEmrFileName, string strFileNo) {
            object[] results = this.Invoke("EmrJHEMRGetEmrWebViewPara", new object[] {
                        strLoginName,
                        strLoginPwd,
                        strPatID,
                        strVisitID,
                        strEmrFileName,
                        strFileNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EmrJHEMRGetEmrWebViewParaAsync(string strLoginName, string strLoginPwd, string strPatID, string strVisitID, string strEmrFileName, string strFileNo) {
            this.EmrJHEMRGetEmrWebViewParaAsync(strLoginName, strLoginPwd, strPatID, strVisitID, strEmrFileName, strFileNo, null);
        }
        
        /// <remarks/>
        public void EmrJHEMRGetEmrWebViewParaAsync(string strLoginName, string strLoginPwd, string strPatID, string strVisitID, string strEmrFileName, string strFileNo, object userState) {
            if ((this.EmrJHEMRGetEmrWebViewParaOperationCompleted == null)) {
                this.EmrJHEMRGetEmrWebViewParaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrJHEMRGetEmrWebViewParaOperationCompleted);
            }
            this.InvokeAsync("EmrJHEMRGetEmrWebViewPara", new object[] {
                        strLoginName,
                        strLoginPwd,
                        strPatID,
                        strVisitID,
                        strEmrFileName,
                        strFileNo}, this.EmrJHEMRGetEmrWebViewParaOperationCompleted, userState);
        }
        
        private void OnEmrJHEMRGetEmrWebViewParaOperationCompleted(object arg) {
            if ((this.EmrJHEMRGetEmrWebViewParaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrJHEMRGetEmrWebViewParaCompleted(this, new EmrJHEMRGetEmrWebViewParaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOp(string strPatientId, int nVisitId) {
            object[] results = this.Invoke("GetOp", new object[] {
                        strPatientId,
                        nVisitId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpAsync(string strPatientId, int nVisitId) {
            this.GetOpAsync(strPatientId, nVisitId, null);
        }
        
        /// <remarks/>
        public void GetOpAsync(string strPatientId, int nVisitId, object userState) {
            if ((this.GetOpOperationCompleted == null)) {
                this.GetOpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpOperationCompleted);
            }
            this.InvokeAsync("GetOp", new object[] {
                        strPatientId,
                        nVisitId}, this.GetOpOperationCompleted, userState);
        }
        
        private void OnGetOpOperationCompleted(object arg) {
            if ((this.GetOpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpCompleted(this, new GetOpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAgetest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAgetest(System.DateTime dtCurrent, System.DateTime dtBirth) {
            object[] results = this.Invoke("GetAgetest", new object[] {
                        dtCurrent,
                        dtBirth});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgetestAsync(System.DateTime dtCurrent, System.DateTime dtBirth) {
            this.GetAgetestAsync(dtCurrent, dtBirth, null);
        }
        
        /// <remarks/>
        public void GetAgetestAsync(System.DateTime dtCurrent, System.DateTime dtBirth, object userState) {
            if ((this.GetAgetestOperationCompleted == null)) {
                this.GetAgetestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgetestOperationCompleted);
            }
            this.InvokeAsync("GetAgetest", new object[] {
                        dtCurrent,
                        dtBirth}, this.GetAgetestOperationCompleted, userState);
        }
        
        private void OnGetAgetestOperationCompleted(object arg) {
            if ((this.GetAgetestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgetestCompleted(this, new GetAgetestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAgeByBirthday", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAgeByBirthday(System.DateTime birthday, System.DateTime now) {
            object[] results = this.Invoke("GetAgeByBirthday", new object[] {
                        birthday,
                        now});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgeByBirthdayAsync(System.DateTime birthday, System.DateTime now) {
            this.GetAgeByBirthdayAsync(birthday, now, null);
        }
        
        /// <remarks/>
        public void GetAgeByBirthdayAsync(System.DateTime birthday, System.DateTime now, object userState) {
            if ((this.GetAgeByBirthdayOperationCompleted == null)) {
                this.GetAgeByBirthdayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgeByBirthdayOperationCompleted);
            }
            this.InvokeAsync("GetAgeByBirthday", new object[] {
                        birthday,
                        now}, this.GetAgeByBirthdayOperationCompleted, userState);
        }
        
        private void OnGetAgeByBirthdayOperationCompleted(object arg) {
            if ((this.GetAgeByBirthdayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgeByBirthdayCompleted(this, new GetAgeByBirthdayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperatingMrStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOperatingMrStatus(string strPatientId, int nVisitId, int flag) {
            object[] results = this.Invoke("GetOperatingMrStatus", new object[] {
                        strPatientId,
                        nVisitId,
                        flag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOperatingMrStatusAsync(string strPatientId, int nVisitId, int flag) {
            this.GetOperatingMrStatusAsync(strPatientId, nVisitId, flag, null);
        }
        
        /// <remarks/>
        public void GetOperatingMrStatusAsync(string strPatientId, int nVisitId, int flag, object userState) {
            if ((this.GetOperatingMrStatusOperationCompleted == null)) {
                this.GetOperatingMrStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperatingMrStatusOperationCompleted);
            }
            this.InvokeAsync("GetOperatingMrStatus", new object[] {
                        strPatientId,
                        nVisitId,
                        flag}, this.GetOperatingMrStatusOperationCompleted, userState);
        }
        
        private void OnGetOperatingMrStatusOperationCompleted(object arg) {
            if ((this.GetOperatingMrStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperatingMrStatusCompleted(this, new GetOperatingMrStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPATMrStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPATMrStatus(string strPatientId, int nVisitId) {
            object[] results = this.Invoke("GetPATMrStatus", new object[] {
                        strPatientId,
                        nVisitId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPATMrStatusAsync(string strPatientId, int nVisitId) {
            this.GetPATMrStatusAsync(strPatientId, nVisitId, null);
        }
        
        /// <remarks/>
        public void GetPATMrStatusAsync(string strPatientId, int nVisitId, object userState) {
            if ((this.GetPATMrStatusOperationCompleted == null)) {
                this.GetPATMrStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPATMrStatusOperationCompleted);
            }
            this.InvokeAsync("GetPATMrStatus", new object[] {
                        strPatientId,
                        nVisitId}, this.GetPATMrStatusOperationCompleted, userState);
        }
        
        private void OnGetPATMrStatusOperationCompleted(object arg) {
            if ((this.GetPATMrStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPATMrStatusCompleted(this, new GetPATMrStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperatingMrStatus_new", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOperatingMrStatus_new(string strPatientId, int nVisitId, int flag, string strOpType) {
            object[] results = this.Invoke("GetOperatingMrStatus_new", new object[] {
                        strPatientId,
                        nVisitId,
                        flag,
                        strOpType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOperatingMrStatus_newAsync(string strPatientId, int nVisitId, int flag, string strOpType) {
            this.GetOperatingMrStatus_newAsync(strPatientId, nVisitId, flag, strOpType, null);
        }
        
        /// <remarks/>
        public void GetOperatingMrStatus_newAsync(string strPatientId, int nVisitId, int flag, string strOpType, object userState) {
            if ((this.GetOperatingMrStatus_newOperationCompleted == null)) {
                this.GetOperatingMrStatus_newOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperatingMrStatus_newOperationCompleted);
            }
            this.InvokeAsync("GetOperatingMrStatus_new", new object[] {
                        strPatientId,
                        nVisitId,
                        flag,
                        strOpType}, this.GetOperatingMrStatus_newOperationCompleted, userState);
        }
        
        private void OnGetOperatingMrStatus_newOperationCompleted(object arg) {
            if ((this.GetOperatingMrStatus_newCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperatingMrStatus_newCompleted(this, new GetOperatingMrStatus_newCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Gethuiqiaoshuxue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Gethuiqiaoshuxue(string strPatientId, int nVisitId) {
            object[] results = this.Invoke("Gethuiqiaoshuxue", new object[] {
                        strPatientId,
                        nVisitId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GethuiqiaoshuxueAsync(string strPatientId, int nVisitId) {
            this.GethuiqiaoshuxueAsync(strPatientId, nVisitId, null);
        }
        
        /// <remarks/>
        public void GethuiqiaoshuxueAsync(string strPatientId, int nVisitId, object userState) {
            if ((this.GethuiqiaoshuxueOperationCompleted == null)) {
                this.GethuiqiaoshuxueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGethuiqiaoshuxueOperationCompleted);
            }
            this.InvokeAsync("Gethuiqiaoshuxue", new object[] {
                        strPatientId,
                        nVisitId}, this.GethuiqiaoshuxueOperationCompleted, userState);
        }
        
        private void OnGethuiqiaoshuxueOperationCompleted(object arg) {
            if ((this.GethuiqiaoshuxueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GethuiqiaoshuxueCompleted(this, new GethuiqiaoshuxueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EMROrigFileList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EMROrigFileList(string visit_flag, string patient_id, string visit_id) {
            object[] results = this.Invoke("EMROrigFileList", new object[] {
                        visit_flag,
                        patient_id,
                        visit_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EMROrigFileListAsync(string visit_flag, string patient_id, string visit_id) {
            this.EMROrigFileListAsync(visit_flag, patient_id, visit_id, null);
        }
        
        /// <remarks/>
        public void EMROrigFileListAsync(string visit_flag, string patient_id, string visit_id, object userState) {
            if ((this.EMROrigFileListOperationCompleted == null)) {
                this.EMROrigFileListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEMROrigFileListOperationCompleted);
            }
            this.InvokeAsync("EMROrigFileList", new object[] {
                        visit_flag,
                        patient_id,
                        visit_id}, this.EMROrigFileListOperationCompleted, userState);
        }
        
        private void OnEMROrigFileListOperationCompleted(object arg) {
            if ((this.EMROrigFileListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EMROrigFileListCompleted(this, new EMROrigFileListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ArcRlvAppAuditResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ArcRlvAppAuditResult(string strResult) {
            object[] results = this.Invoke("ArcRlvAppAuditResult", new object[] {
                        strResult});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ArcRlvAppAuditResultAsync(string strResult) {
            this.ArcRlvAppAuditResultAsync(strResult, null);
        }
        
        /// <remarks/>
        public void ArcRlvAppAuditResultAsync(string strResult, object userState) {
            if ((this.ArcRlvAppAuditResultOperationCompleted == null)) {
                this.ArcRlvAppAuditResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArcRlvAppAuditResultOperationCompleted);
            }
            this.InvokeAsync("ArcRlvAppAuditResult", new object[] {
                        strResult}, this.ArcRlvAppAuditResultOperationCompleted, userState);
        }
        
        private void OnArcRlvAppAuditResultOperationCompleted(object arg) {
            if ((this.ArcRlvAppAuditResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ArcRlvAppAuditResultCompleted(this, new ArcRlvAppAuditResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/C_Test", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet C_Test(string strPatID, string strVisitID) {
            object[] results = this.Invoke("C_Test", new object[] {
                        strPatID,
                        strVisitID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void C_TestAsync(string strPatID, string strVisitID) {
            this.C_TestAsync(strPatID, strVisitID, null);
        }
        
        /// <remarks/>
        public void C_TestAsync(string strPatID, string strVisitID, object userState) {
            if ((this.C_TestOperationCompleted == null)) {
                this.C_TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnC_TestOperationCompleted);
            }
            this.InvokeAsync("C_Test", new object[] {
                        strPatID,
                        strVisitID}, this.C_TestOperationCompleted, userState);
        }
        
        private void OnC_TestOperationCompleted(object arg) {
            if ((this.C_TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.C_TestCompleted(this, new C_TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SF_TestCompletedEventHandler(object sender, SF_TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SF_TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SF_TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ArcCancleUpdateStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void OutpatToInPatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void QYYYGETINFOCompletedEventHandler(object sender, QYYYGETINFOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QYYYGETINFOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QYYYGETINFOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateInp_NoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UnitePatientIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UnitePaitentMrFileCompletedEventHandler(object sender, UnitePaitentMrFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnitePaitentMrFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnitePaitentMrFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetHisCostNewCompletedEventHandler(object sender, EmrGetHisCostNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetHisCostNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetHisCostNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetHisCostCompletedEventHandler(object sender, EmrGetHisCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetHisCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetHisCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SFGETINFOCompletedEventHandler(object sender, SFGETINFOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SFGETINFOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SFGETINFOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetPatientIDCompletedEventHandler(object sender, EmrGetPatientIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetPatientIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetPatientIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetToHisOutPatInfoBookCompletedEventHandler(object sender, GetToHisOutPatInfoBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetToHisOutPatInfoBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetToHisOutPatInfoBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CopyCompletedEventHandler(object sender, CopyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void get_fileToLocalCompletedEventHandler(object sender, get_fileToLocalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_fileToLocalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_fileToLocalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DTGETINFOCompletedEventHandler(object sender, DTGETINFOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DTGETINFOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DTGETINFOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetCpInfoDataSetCompletedEventHandler(object sender, EmrGetCpInfoDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetCpInfoDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetCpInfoDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void YYGETINFOCompletedEventHandler(object sender, YYGETINFOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class YYGETINFOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal YYGETINFOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CisGetOutPatientInfoCompletedEventHandler(object sender, CisGetOutPatientInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CisGetOutPatientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CisGetOutPatientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrOldOrdersCompletedEventHandler(object sender, EmrOldOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrOldOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrOldOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void genMrPathCompletedEventHandler(object sender, genMrPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class genMrPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal genMrPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMrSummaryCompletedEventHandler(object sender, GetMrSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMrSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMrSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetICUmessageCompletedEventHandler(object sender, GetICUmessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetICUmessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetICUmessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrAccountValidateCompletedEventHandler(object sender, EmrAccountValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrAccountValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrAccountValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroDictCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroZrysCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroBedDictCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetNurseBloodBypatient1CompletedEventHandler(object sender, EmrGetNurseBloodBypatient1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetNurseBloodBypatient1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetNurseBloodBypatient1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetExamReportNewCompletedEventHandler(object sender, EmrGetExamReportNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetExamReportNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetExamReportNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetNurseBloodBypatientCompletedEventHandler(object sender, EmrGetNurseBloodBypatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetNurseBloodBypatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetNurseBloodBypatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetEvaluateBloodBypatientCompletedEventHandler(object sender, EmrGetEvaluateBloodBypatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetEvaluateBloodBypatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetEvaluateBloodBypatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroUsersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroOperationCodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroICDCodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroDeptDictCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroPatForCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDeptUserCompletedEventHandler(object sender, GetDeptUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeptUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeptUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroNewPatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroOnePatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroOnePatTestCompletedEventHandler(object sender, EmrSynchroOnePatTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrSynchroOnePatTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrSynchroOnePatTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroNewPatMZCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroOutPatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrBackupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateErrorTopicidCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetOrderTypeDictCompletedEventHandler(object sender, EmrGetOrderTypeDictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetOrderTypeDictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetOrderTypeDictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetOrderItemDictCompletedEventHandler(object sender, EmrGetOrderItemDictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetOrderItemDictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetOrderItemDictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetOrderDataSetCompletedEventHandler(object sender, EmrGetOrderDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetOrderDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetOrderDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroPatOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetOrderDataSetByPatentIDCompletedEventHandler(object sender, EmrGetOrderDataSetByPatentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetOrderDataSetByPatentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetOrderDataSetByPatentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetLabDataSetByPatentIDCompletedEventHandler(object sender, EmrGetLabDataSetByPatentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetLabDataSetByPatentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetLabDataSetByPatentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetLabReportDataSetCompletedEventHandler(object sender, EmrGetLabReportDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetLabReportDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetLabReportDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetLabItemResultQueryCompletedEventHandler(object sender, EmrGetLabItemResultQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetLabItemResultQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetLabItemResultQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetExamMasterCompletedEventHandler(object sender, EmrGetExamMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetExamMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetExamMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetExamAppointCompletedEventHandler(object sender, EmrGetExamAppointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetExamAppointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetExamAppointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroExamAppointCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetExamReportCompletedEventHandler(object sender, EmrGetExamReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetExamReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetExamReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroDeptPatOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroAppGrantsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroPatMedicalCostByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroLisCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSychroAdtLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateEmrReportBedDateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetHisQNRYRSCompletedEventHandler(object sender, EmrGetHisQNRYRSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetHisQNRYRSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetHisQNRYRSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetHisQNCYRSCompletedEventHandler(object sender, EmrGetHisQNCYRSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetHisQNCYRSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetHisQNCYRSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetHisQWYYRSCompletedEventHandler(object sender, EmrGetHisQWYYRSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetHisQWYYRSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetHisQWYYRSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetHisQMSYRSCompletedEventHandler(object sender, EmrGetHisQMSYRSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetHisQMSYRSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetHisQMSYRSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetPatDischargeDateTimeCompletedEventHandler(object sender, EmrGetPatDischargeDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetPatDischargeDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetPatDischargeDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateEmrReportBedDateICUCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSynchroDischargeDateTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetEncodingPasswordCompletedEventHandler(object sender, EmrGetEncodingPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetEncodingPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetEncodingPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrToHisCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void XinXiDaoRuHisCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetGeneralSQLCompletedEventHandler(object sender, EmrGetGeneralSQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetGeneralSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetGeneralSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetdatasetCompletedEventHandler(object sender, GetdatasetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetdatasetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetdatasetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGenralDataSetCompletedEventHandler(object sender, EmrGenralDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGenralDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGenralDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetTransferInfoCompletedEventHandler(object sender, EmrGetTransferInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetTransferInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetTransferInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AAAEmrGenralStrCompletedEventHandler(object sender, AAAEmrGenralStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AAAEmrGenralStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AAAEmrGenralStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGenralStrCompletedEventHandler(object sender, EmrGenralStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGenralStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGenralStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetMonitorCodeCompletedEventHandler(object sender, EmrGetMonitorCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetMonitorCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetMonitorCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetAutoDisCompletedEventHandler(object sender, EmrGetAutoDisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetAutoDisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetAutoDisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSetHisEncodingPasswordCompletedEventHandler(object sender, EmrSetHisEncodingPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrSetHisEncodingPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrSetHisEncodingPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrGetHISCostsCompletedEventHandler(object sender, EmrGetHISCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrGetHISCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrGetHISCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrSychroBasicPatInfoCompletedEventHandler(object sender, EmrSychroBasicPatInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrSychroBasicPatInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrSychroBasicPatInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrFollowupCompletedEventHandler(object sender, EmrFollowupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrFollowupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrFollowupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void HISGETINFOCompletedEventHandler(object sender, HISGETINFOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HISGETINFOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HISGETINFOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDBDataSetCompletedEventHandler(object sender, GetDBDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDBDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDBDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ExcuteDBSqlCompletedEventHandler(object sender, ExcuteDBSqlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteDBSqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteDBSqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EmrJHEMRGetEmrWebViewParaCompletedEventHandler(object sender, EmrJHEMRGetEmrWebViewParaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrJHEMRGetEmrWebViewParaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrJHEMRGetEmrWebViewParaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetOpCompletedEventHandler(object sender, GetOpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAgetestCompletedEventHandler(object sender, GetAgetestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgetestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgetestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAgeByBirthdayCompletedEventHandler(object sender, GetAgeByBirthdayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgeByBirthdayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgeByBirthdayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetOperatingMrStatusCompletedEventHandler(object sender, GetOperatingMrStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperatingMrStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperatingMrStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPATMrStatusCompletedEventHandler(object sender, GetPATMrStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPATMrStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPATMrStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetOperatingMrStatus_newCompletedEventHandler(object sender, GetOperatingMrStatus_newCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperatingMrStatus_newCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperatingMrStatus_newCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GethuiqiaoshuxueCompletedEventHandler(object sender, GethuiqiaoshuxueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GethuiqiaoshuxueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GethuiqiaoshuxueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EMROrigFileListCompletedEventHandler(object sender, EMROrigFileListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EMROrigFileListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EMROrigFileListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ArcRlvAppAuditResultCompletedEventHandler(object sender, ArcRlvAppAuditResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ArcRlvAppAuditResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ArcRlvAppAuditResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void C_TestCompletedEventHandler(object sender, C_TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class C_TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal C_TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591